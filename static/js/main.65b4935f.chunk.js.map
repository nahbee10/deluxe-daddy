{"version":3,"sources":["components/Placenta.js","App.js","serviceWorker.js","index.js"],"names":["generatedCubeRenderTarget","ldrCubeRenderTarget","hdrCubeRenderTarget","rgbmCubeRenderTarget","style","height","params","MaterialNew","getEnvScene","envScene","THREE","geometry","deleteAttribute","roomMaterial","metalness","side","room","scale","setScalar","add","mainLight","lightMaterial","color","emissive","emissiveIntensity","light1","material","setHex","position","set","light2","clone","light3","sceneSetup","width","el","clientWidth","console","log","scene","background","camera","renderer","physicallyCorrectLights","myThis","ship_material","flatShading","loadModel","undefined","object","traverse","child","isMesh","addCustomSceneObjects","requestID","window","requestAnimationFrame","startAnimationLoop","manager","onProgress","item","loaded","total","textureLoader","texture","load","xhr","lengthComputable","percentComplete","Math","round","onError","loader","OBJLoader","obj","setPixelRatio","devicePixelRatio","setSize","innerWidth","outputEncoding","stats","Stats","appendChild","domElement","onDocumentMouseMove","event","children","geometry2","group","group2","roughness","torusMesh","x","y","z","torusMesh2","rotation","PI","Nodes","torusMeshNode","torusMeshNode2","planeMesh","onLoad","pmremGenerator","dispose","hdrCubeMap","HDRCubeTextureLoader","setPath","setDataType","fromCubemap","magFilter","needsUpdate","ldrCubeMap","encoding","rgbmCubeMap","format","compileCubemapShader","fromScene","renderTarget","cubeMap","begin","visible","newEnvMap","envMap","map","toneMappingExposure","lookAt","render","end","handleWindowResize","clientHeight","aspect","updateProjectionMatrix","this","addEventListener","removeEventListener","cancelAnimationFrame","controls","ref","Component","App","createClass","id","className","margin","Switch","Route","exact","path","Placenta","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65b4935f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { AsciiEffect } from 'three/examples/jsm/effects/AsciiEffect.js';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader.js';\nimport { GUI } from 'three/examples/jsm/libs/dat.gui.module.js';\nimport * as Nodes from 'three/examples/jsm/nodes/Nodes.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nvar angle = 0;\nvar radiusL = 32;\nvar radiusS = 14; \n\nconst style = {\n  height: 5000 // we can control scene size by setting container dimensions\n};\n\nvar params = {\n\tenvMap: 'HDR',\n\troughness: 0.0,\n\tmetalness: 0.0,\n\texposure: 1.0,\n\tnodes: true,\n\tanimate: true,\n\tdebug: false\n};\n\nvar container, stats;\nvar camera, scene, renderer;\nvar torusMesh, planeMesh;\nvar generatedCubeRenderTarget, ldrCubeRenderTarget, hdrCubeRenderTarget, rgbmCubeRenderTarget;\nvar ldrCubeMap, hdrCubeMap, rgbmCubeMap;\n\nclass MaterialNew extends Component {\n  componentDidMount() {\n    this.sceneSetup();\n    \n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  getEnvScene = () => {\n\n\t\tvar envScene = new THREE.Scene();\n\n\t\tvar geometry = new THREE.BoxBufferGeometry();\n\t\tgeometry.deleteAttribute( 'uv' );\n\t\tvar roomMaterial = new THREE.MeshStandardMaterial( { metalness: 0, side: THREE.BackSide } );\n\t\tvar room = new THREE.Mesh( geometry, roomMaterial );\n\t\troom.scale.setScalar( 10 );\n\t\tenvScene.add( room );\n\n\t\tvar mainLight = new THREE.PointLight( 0xffffff, 50, 0, 2 );\n\t\tenvScene.add( mainLight );\n\n\t\tvar lightMaterial = new THREE.MeshLambertMaterial( { color: 0x000000, emissive: 0xffffff, emissiveIntensity: 10 } );\n\n\t\tvar light1 = new THREE.Mesh( geometry, lightMaterial );\n\t\tlight1.material.color.setHex( 0xff0000 );\n\t\tlight1.position.set( - 5, 2, 0 );\n\t\tlight1.scale.set( 0.1, 1, 1 );\n\t\tenvScene.add( light1 );\n\n\t\tvar light2 = new THREE.Mesh( geometry, lightMaterial.clone() );\n\t\tlight2.material.color.setHex( 0x00ff00 );\n\t\tlight2.position.set( 0, 5, 0 );\n\t\tlight2.scale.set( 1, 0.1, 1 );\n\t\tenvScene.add( light2 );\n\n\t\tvar light3 = new THREE.Mesh( geometry, lightMaterial.clone() );\n\t\tlight3.material.color.setHex( 0x0000ff );\n\t\tlight3.position.set( 2, 1, 5 );\n\t\tlight3.scale.set( 1.5, 2, 0.1 );\n\t\tenvScene.add( light3 );\n\n\t\treturn envScene;\n\n\t}\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = 5000;\n    console.log(\"height\",height);\n\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0,0,0);\n    this.camera = new THREE.PerspectiveCamera(\n      40, // fov = field of view\n      width / height, // aspect ratio\n      1, // near plane\n      1000 // far plane\n    );\n    // this.camera.position.y = 150;\n    this.camera.position.set( 0, 0, 350 );\n\n    // this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n\n   \n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.physicallyCorrectLights = true;\n\n    var object;\n    var myThis = this;\n    var ship_material = new THREE.MeshPhongMaterial( { flatShading: true }  );\n    this.loadModel = function() {\n\n          if (myThis.object != undefined){\n            myThis.object.traverse( function ( child ) {\n\n              if ( child.isMesh ) child.material = ship_material;\n\n            } );\n\n            // myThis.object.position.z = -100;\n            // myThis.object.scale.x = 80;\n            // myThis.object.scale.y = 80;\n            // myThis.object.scale.z = 80;\n            // myThis.scene.add( myThis.object );\n            myThis.addCustomSceneObjects();\n            myThis.requestID = window.requestAnimationFrame(myThis.startAnimationLoop);\n          }else{\n          }\n          \n\n        }\n    this.manager = new THREE.LoadingManager( this.loadModel );\n\n        this.manager.onProgress = function ( item, loaded, total ) {\n\n          console.log( item, loaded, total );\n\n        };\n    var textureLoader = new THREE.TextureLoader( this.manager );\n\n    this.texture = textureLoader.load( 'UterusWhole.jpg' );\n    this.onProgress = function( xhr ) {\n\n          if ( xhr.lengthComputable ) {\n\n            var percentComplete = xhr.loaded / xhr.total * 100;\n            console.log( 'model ' + Math.round( percentComplete, 2 ) + '% downloaded' );\n\n          }\n\n        }\n\n    this.onError = function() {}\n\n    this.loader = new OBJLoader( this.manager );\n\n    this.loader.load( 'placenta_test.obj', function ( obj ) {\n      // console.log(obj);\n      myThis.object = obj;\n      console.log(obj);\n\n    }, this.onProgress, this.onError );\n    \n    this.renderer.setPixelRatio( window.devicePixelRatio );\n\tthis.renderer.setSize( window.innerWidth, 5000 );\n\t// container.appendChild( renderer.domElement );\n\n\t//renderer.toneMapping = ReinhardToneMapping;\n\tthis.renderer.outputEncoding = THREE.sRGBEncoding;\n\n\tthis.stats = new Stats();\n\t// container.appendChild( stats.dom );\n\n\t// this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\t// this.controls.minDistance = 50;\n\t// this.controls.maxDistance = 300;\n\n\t// window.addEventListener( 'resize', onWindowResize, false );\n\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n    // document.addEventListener( 'mousemove', this.onDocumentMouseMove, false );\n  };\n\n  onDocumentMouseMove = ( event ) => {\n\n    // var windowHalfX = window.innerWidth / 2;\n    // var windowHalfY = window.innerHeight / 2;\n    // var myThis2 = this;\n    //     myThis2.mouseX = ( event.clientX - windowHalfX ) / 2;\n    //     myThis2.mouseY = ( event.clientY - windowHalfY ) / 2;\n\n      }\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n  \tvar geometry = this.object.children[0].geometry;\n\tvar geometry2 = this.object.children[0].geometry;\n\t// var geometry = new THREE.SphereBufferGeometry( 30, 20, 10 );\n\t// var geometry22 = new THREE.TorusKnotBufferGeometry( 18, 8, 150, 20 );\n\tthis.group = new THREE.Group();\n\tthis.group2 = new THREE.Group();\n\n\tvar material;\n\n\tmaterial = new THREE.MeshStandardMaterial();\n\tmaterial.color = new THREE.Color( 0xffffff );\n\tmaterial.roughness = params.roughness;\n\tmaterial.metalness = params.metalness;\n\n\tthis.torusMesh = new THREE.Mesh( geometry, material );\n\tthis.torusMesh.scale.x = 10;\n\tthis.torusMesh.scale.y = 10;\n\tthis.torusMesh.scale.z = 10;\n\t// this.torusMesh.position.z = 10;\n\n\tthis.torusMesh2 = new THREE.Mesh( geometry2, material );\n\tthis.torusMesh2.rotation.z = Math.PI;\n\tthis.torusMesh2.scale.x = 10;\n\tthis.torusMesh2.scale.y = 10;\n\tthis.torusMesh2.scale.z = 10;\n\t// this.torusMesh2.position.z = -10;\n\n\tthis.group.add( this.torusMesh );\n\tthis.group2.add( this.torusMesh2 );\n\t// this.scene.add( this.torusMesh );\n\n\tmaterial = new Nodes.MeshStandardNodeMaterial();\n\tmaterial.color = new THREE.Color( 0xffffff );\n\tmaterial.roughness = params.roughness;\n\tmaterial.metalness = params.metalness;\n\n\tthis.torusMeshNode = new THREE.Mesh( geometry, material );\n\tthis.torusMeshNode.scale.x = 10;\n\tthis.torusMeshNode.scale.y = 10;\n\tthis.torusMeshNode.scale.z = 10;\n\t// this.torusMeshNode.position.z = 10;\n\n\tthis.torusMeshNode2 = new THREE.Mesh( geometry2, material );\n\tthis.torusMeshNode2.rotation.z = Math.PI;\n\tthis.torusMeshNode2.scale.x = 10;\n\tthis.torusMeshNode2.scale.y = 10;\n\tthis.torusMeshNode2.scale.z = 10;\n\t// this.torusMeshNode2.position.z = -10;\n\n\tthis.group2.add(this.torusMeshNode2);\n\tthis.group.add(this.torusMeshNode);\n\t// this.scene.add( this.torusMeshNode );\n\n\tvar geometry = new THREE.PlaneBufferGeometry( 200, 200 );\n\tvar material = new THREE.MeshBasicMaterial();\n\n\tthis.planeMesh = new THREE.Mesh( geometry, material );\n\tthis.planeMesh.position.y = - 50;\n\tthis.planeMesh.rotation.x = - Math.PI * 0.5;\n\tthis.group.add(this.planeMesh);\n\t// this.scene.add( this.planeMesh );\n\t// this.scene.add(this.group);\n\tthis.scene.add(this.group2);\n  \tTHREE.DefaultLoadingManager.onLoad = function ( ) {\n\n\t\tpmremGenerator.dispose();\n\n\t};\n\n\tvar hdrUrls = [ 'px.hdr', 'nx.hdr', 'py.hdr', 'ny.hdr', 'pz.hdr', 'nz.hdr' ];\n\tvar myThis = this;\n\tthis.hdrCubeMap = new HDRCubeTextureLoader()\n\t\t.setPath( 'textures/cube/pp_cube_map/' )\n\t\t.setDataType( THREE.UnsignedByteType )\n\t\t.load( hdrUrls, function () {\n\t\t\thdrCubeRenderTarget = pmremGenerator.fromCubemap( myThis.hdrCubeMap );\n\n\t\t\tmyThis.hdrCubeMap.magFilter = THREE.LinearFilter;\n\t\t\tmyThis.hdrCubeMap.needsUpdate = true;\n\n\t\t} );\n\n\tvar ldrUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ];\n\tthis.ldrCubeMap = new THREE.CubeTextureLoader()\n\t\t.setPath( './textures/cube/pisa/' )\n\t\t.load( ldrUrls, function () {\n\n\t\t\tmyThis.ldrCubeMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tldrCubeRenderTarget = pmremGenerator.fromCubemap( myThis.ldrCubeMap );\n\n\t\t} );\n\n\n\tvar rgbmUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ];\n\tthis.rgbmCubeMap = new THREE.CubeTextureLoader()\n\t\t.setPath( './textures/cube/pisaRGBM16/' )\n\t\t.load( rgbmUrls, function () {\n\n\t\t\tmyThis.rgbmCubeMap.encoding = THREE.RGBM16Encoding;\n\t\t\tmyThis.rgbmCubeMap.format = THREE.RGBAFormat;\n\n\t\t\trgbmCubeRenderTarget = pmremGenerator.fromCubemap( myThis.rgbmCubeMap );\n\n\t\t\tmyThis.rgbmCubeMap.magFilter = THREE.LinearFilter;\n\t\t\tmyThis.rgbmCubeMap.needsUpdate = true;\n\n\t\t} );\n\tvar pmremGenerator = new THREE.PMREMGenerator( this.renderer );\n\tpmremGenerator.compileCubemapShader();\n\n\tvar envScene = this.getEnvScene();\n\tgeneratedCubeRenderTarget = pmremGenerator.fromScene( envScene, 0.04 );\n\n\t\n    \n  };\n\n  startAnimationLoop = () => {\n  \t\n \t// \n  \t\t\n  \t\tif (this.object != undefined){\n  \t\tthis.stats.begin();\n\t  \tthis.torusMesh.visible = ! params.nodes;\n\t\tthis.torusMeshNode.visible = params.nodes;\n\n\t\tthis.torusMesh.material.roughness = params.roughness;\n\t\tthis.torusMesh.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode.material.roughness = params.roughness;\n\t\tthis.torusMeshNode.material.metalness = params.metalness;\n\n\t\tthis.torusMesh2.visible = ! params.nodes;\n\t\tthis.torusMeshNode2.visible = params.nodes;\n\n\t\tthis.torusMesh2.material.roughness = params.roughness;\n\t\tthis.torusMesh2.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode2.material.roughness = params.roughness;\n\t\tthis.torusMeshNode2.material.metalness = params.metalness;\n\n\t\tvar renderTarget, cubeMap;\n\n\t\tswitch ( params.envMap ) {\n\n\t\t\tcase 'Generated':\n\t\t\t\trenderTarget = generatedCubeRenderTarget;\n\t\t\t\tcubeMap = generatedCubeRenderTarget.texture;\n\t\t\t\tbreak;\n\t\t\tcase 'LDR':\n\t\t\t\trenderTarget = ldrCubeRenderTarget;\n\t\t\t\tcubeMap = ldrCubeMap;\n\t\t\t\tbreak;\n\t\t\tcase 'HDR':\n\t\t\t\trenderTarget = hdrCubeRenderTarget;\n\t\t\t\tcubeMap = hdrCubeMap;\n\t\t\t\tbreak;\n\t\t\tcase 'RGBM16':\n\t\t\t\trenderTarget = rgbmCubeRenderTarget;\n\t\t\t\tcubeMap = rgbmCubeMap;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tvar newEnvMap = renderTarget ? renderTarget.texture : null;\n\n\t\tif ( newEnvMap && newEnvMap !== this.torusMesh.material.envMap ) {\n\n\t\t\tthis.torusMesh.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode.material.needsUpdate = true;\n\n\t\t\tthis.planeMesh.material.map = newEnvMap;\n\t\t\tthis.planeMesh.material.needsUpdate = true;\n\n\t\t\tthis.torusMesh2.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh2.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode2.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode2.material.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( params.animate ) {\n\n\t\t\tthis.torusMesh.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode.rotation.y = this.torusMesh.rotation.y;\n\n\t\t\tthis.torusMesh2.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode2.rotation.y = this.torusMesh2.rotation.y;\n\n\t\t}\n\n\t\tthis.planeMesh.visible = params.debug;\n\n\t\tif ((this.group != undefined) && (this.group2 != undefined)){\n\t      // this.camera.rotation.y += 0.1;\n\t      // this.group.position.y = radiusL * Math.cos( angle );  \n\t      // this.group.position.x = radiusL * Math.sin( angle );\n\t      // this.group.rotation.z = Math.PI - angle;\n\n\t      // this.group2.position.y = radiusS * Math.cos( angle );  \n\t      // this.group2.position.x = radiusS * Math.sin( angle );\n\t      // this.group2.rotation.z = Math.PI - angle;\n\t      // angle += 0.01;\n\t      // var xAdd = ( this.mouseX - this.camera.position.x ) * .05;\n\t      // var nahee = this.camera.position.x + xAdd;\n\t      // this.camera.position.x = nahee;\n\t      // this.camera.position.y += ( - this.mouseY - this.camera.position.y ) * .05;\n\t    }\n    \n\t\tthis.scene.background = cubeMap;\n\t\tthis.renderer.toneMappingExposure = params.exposure;\n\n\t\tthis.camera.lookAt( this.scene.position);\n\t    this.renderer.render(this.scene, this.camera);\n\t    this.stats.end();\n\n\t}\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n  };\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  render() {\n    return <div style={style} ref={ref => (this.el = ref)} />;\n  }\n}\n\n\nexport default MaterialNew;\n","import React, { Component , Fragment} from 'react';\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from 'react-router-dom';\nimport './App.css';\n\nimport createClass from 'create-react-class';\n\nimport Placenta from './components/Placenta';\n\nvar App = createClass({\n    render: function () {\n    return (\n      <Router>\n        <div id=\"app\" className=\"App\" style={{margin:\"0px auto\", height:\"905px\"}}>\n          <Fragment>\n              <Switch>\n              <Route exact path=\"/\" exact render={() => (\n\n                  <Placenta></Placenta>\n                )} />\n\n                </Switch>\n              </Fragment>\n            </div>\n          </Router>\n\n        )}\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}