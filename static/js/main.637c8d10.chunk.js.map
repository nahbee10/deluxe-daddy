{"version":3,"sources":["components/Placenta.js","components/PlacentaAll.js","js/SpecGlossMultiUVInstanceExample.js","js/SpecGlossMultiUVInstanceExample3.js","js/SpecGlossMultiUVInstanceExample2.js","js/SpecGlossMultiUVInstanceExample4.js","components/Hooks.js","components/Loading.js","components/Error.js","components/Success.js","components/ScreenWidth.js","components/useScreenWidth.js","components/PlacentaNo.js","components/SubText.js","App.js","serviceWorker.js","index.js"],"names":["generatedCubeRenderTarget","ldrCubeRenderTarget","hdrCubeRenderTarget","rgbmCubeRenderTarget","style","height","params","Component","addOrMergeProp","material","propName","data","Object","assign","toJSON","res","THREE","prototype","call","this","undefined","_serializationManager","serialize","bind","afterSerialize","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","c","Math","cos","s","sin","set","join","DEFAULT_MAP_LIST","PROP_TO_CHUNK_MAP","mapRegex","getReplaceString","mapName","getUniformNameFromProp","prop","addMapTransformPropsToMaterial","_mapName","shaderUniforms","value","x","y","decorateMaterialWithPerMapTransforms","mapList","isPerMapTransformExtended","shaderIncludes","i","length","uniform","type","stage","lookup","isSpecGlossExtended","push","chunkName","shaderChunk","replace","SerializationManager","addFunction","meta","metadata","extensions","forEach","toArray","addAfterFunction","roughnessMap","roughness","metalnessMap","metalness","processFunctions","afterFunctions","func","f","SHADER_INCLUDES_SPEC_GLOSS","roughnessmap_fragment","metalnessmap_fragment","lights_physical_fragment","decorateMaterialWithSpecGloss","specular","setHex","glossiness","glossinessMap","specularMap","USE_GLOSSINESSMAP","defineProperty","get","v","getHex","isTexture","uuid","Status","useMailChimp","url","React","useState","status","setStatus","error","setError","setValue","subscribe","useCallback","keys","map","key","toQueryString","newUrl","jsonp","param","err","console","log","msg","result","Loading","props","Error","handleSubmit","defaultErrorMsg","noatErrorMsg","alreadyErrorMsg","domainErrorMsg","emptyErrorMsg","name","state","display","displayForm","e","setState","onClickk","className","onClick","Success","ScreenWidth","children","thingy","thingy2","firstName","email","form","setForm","status2","setStatus2","useMailchimp","handleInputChange","event","target","statusChange","includes","onSubmit","preventDefault","autocomplete","id","placeholder","onChange","FNAME","EMAIL","useScreenWidth","mom","son","INSTANCES","gltfScale","firstTime","projectTitles","projectTitles2","projectLinks","tableShow","creditShow","marqueeHovered","marqueeHovered2","focusCounter","randDic","arrowSymbols","PlacentaNo","updateRnd","newSecondRndTxt","newThirdRndTxt","newFourthRndTxt","randInt","floor","random","randInt2","randInt_","randInt3","randInt__","randInt4","secondRnd","thirdRnd","fourthRnd","updateArrow","mymyText","updateFocus","counterReminder","tf","focusEvent2","meshArr","focusEvent","sceneSetup","window","innerWidth","innerHeight","elmnt","document","getElementById","tableHeight","offsetHeight","tableTop","isMobile","isBrowser","scene","intersectsScene","mouseX","mouseY","mouse","targetX","targetY","clock","camera","position","z","light","add","ambient","renderer","physicallyCorrectLights","outputEncoding","setPixelRatio","devicePixelRatio","setSize","interaction","Interaction","stats","Stats","offsetAttArr","scaleAttArr","matArraySize","matrixArray","Float32Array","matrixAttributeArray","matrixArray2","matrixAttributeArray2","matrixArray3","matrixAttributeArray3","matrixArray4","matrixAttributeArray4","matrixArray5","matrixAttributeArray5","initInstanceAttributesExtended","mesh","mesh2","mesh3","mesh4","initTexture","initBall","loadGLTF","loadGLTF2","startAnimationLoop","el","appendChild","domElement","addEventListener","onDocumentMouseMove","myThis","loader","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","ddsLoader","DDSLoader","setDDSLoader","loadStartTime","performance","now","load","gltf","object","info","toFixed","traverse","node","isMeshStandardMaterial","isShaderMaterial","envMap","needsUpdate","PI","scale","meshGLTF","frustumCulled","geometry","materialGLTF","applyInstancingToMeshExtended","gltf2","meshGLTF2","materialGLTF2","logoOpacity","drdLogo","interval","setInterval","texture","wrapS","wrapT","texture3","texture4","texture5","texture6","mapping","encoding","material2","material3","material4","material5","mesh5","max","minus","minus2","minus3","array","attArray","meshName","n","nurbsControlPoints","nurbsKnots","knot","clamp","positions","NURBSCurve","getSpacedPoints","offsets","scales","dummy2","dummy4","dummy3","l","object2","userData","index","cursor","on","ev","goEventClicked","goEvent","goEvent2","clone","updateMatrixWorld","theLimit","instanceOffsetAttribute2","instanceScaleAttribute2","indecis","addAttribute","uTime","uScale","uSelected","isSimpleInstanceExtended","begin_vertex","onBeforeCompile","shader","uniforms","vertexShader","decorateMaterialWithSimpleInstancing2","customDepthMaterial","decorateMaterialWithSimpleInstancing","depthPacking","copy","instanceCount","setAttribute","windowHalfX","windowHalfY","myThis2","clientX","clientY","emissive","r","g","b","emissiveIntensity","projectTitle","mHeight","modalTop","modalLeft","petitDisplay","titleClicked","uterusImg","projectLink","marqueeTxt","marqueePointer","delta","getDelta","time","selected","render","end","requestID","requestAnimationFrame","removeModal","test","tableDisplay","changeRowColor","rowColor","rowTextColor","rowColor2","rowTextColor2","rowColor3","rowTextColor3","rowColor4","rowTextColor4","changeRowColor2","changeRowColor3","changeRowColor4","handleZIndex","formZIndex","showTable","clearInterval","showCredit","creditDisplay","toggleMarqueeHover","marqueeHover","toggleMarqueeHover2","marqueeHover2","handleWindowResize","width","clientWidth","clientHeight","updateProjectionMatrix","wWidth","wHeight","aspect","marqueeDisplay","titleWidth","titleHeight","titlePointerEvents","titleImageWidth","titleImageDisplay","showTableRow","seTop","focus","removeEventListener","cancelAnimationFrame","overflowY","top","left","ref","background","backgroundImage","onMouseEnter","onMouseLeave","href","src","color","zIndex","class","viewBox","baseFrequency","numOctaves","seed","stitchTiles","in","in2","data-min-scale","data-max-scale","xChannelSelector","yChannelSelector","filterUnits","data-filter-type","d","fill","filter","overflow","SubText","handleEmailChange","handlePasswordChange","password","onLogin","App","createClass","margin","Switch","Route","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.637c8d10.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { AsciiEffect } from 'three/examples/jsm/effects/AsciiEffect.js';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader.js';\nimport { GUI } from 'three/examples/jsm/libs/dat.gui.module.js';\nimport { SubdivisionModifier } from 'three/examples/jsm/modifiers/SubdivisionModifier.js';\nimport * as Nodes from 'three/examples/jsm/nodes/Nodes.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nvar angle = 0;\nvar radiusL = 32;\nvar radiusS = 14; \n\nconst style = {\n  height: 5400 // we can control scene size by setting container dimensions\n};\n\nvar params = {\n\tenvMap: 'HDR',\n\troughness: 0.0,\n\tmetalness: 0.0,\n\texposure: 1.0,\n\tnodes: true,\n\tanimate: true,\n\tdebug: false\n};\n\nvar container, stats;\nvar camera, scene, renderer;\nvar torusMesh, planeMesh;\nvar generatedCubeRenderTarget, ldrCubeRenderTarget, hdrCubeRenderTarget, rgbmCubeRenderTarget;\nvar ldrCubeMap, hdrCubeMap, rgbmCubeMap;\n\nclass Placenta extends Component {\n  componentDidMount() {\n    this.sceneSetup();\n    \n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  getEnvScene = () => {\n\n\t\tvar envScene = new THREE.Scene();\n\n\t\tvar geometry = new THREE.BoxBufferGeometry();\n\t\tgeometry.deleteAttribute( 'uv' );\n\t\tvar roomMaterial = new THREE.MeshStandardMaterial( { metalness: 0, side: THREE.BackSide } );\n\t\tvar room = new THREE.Mesh( geometry, roomMaterial );\n\t\troom.scale.setScalar( 10 );\n\t\tenvScene.add( room );\n\n\t\tvar mainLight = new THREE.PointLight( 0xffffff, 50, 0, 2 );\n\t\tenvScene.add( mainLight );\n\n\t\tvar lightMaterial = new THREE.MeshLambertMaterial( { color: 0x000000, emissive: 0xffffff, emissiveIntensity: 10 } );\n\n\t\tvar light1 = new THREE.Mesh( geometry, lightMaterial );\n\t\tlight1.material.color.setHex( 0xff0000 );\n\t\tlight1.position.set( - 5, 2, 0 );\n\t\tlight1.scale.set( 0.1, 1, 1 );\n\t\tenvScene.add( light1 );\n\n\t\tvar light2 = new THREE.Mesh( geometry, lightMaterial.clone() );\n\t\tlight2.material.color.setHex( 0x00ff00 );\n\t\tlight2.position.set( 0, 5, 0 );\n\t\tlight2.scale.set( 1, 0.1, 1 );\n\t\tenvScene.add( light2 );\n\n\t\tvar light3 = new THREE.Mesh( geometry, lightMaterial.clone() );\n\t\tlight3.material.color.setHex( 0x0000ff );\n\t\tlight3.position.set( 2, 1, 5 );\n\t\tlight3.scale.set( 1.5, 2, 0.1 );\n\t\tenvScene.add( light3 );\n\n\t\treturn envScene;\n\n\t}\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = 5400;\n    console.log(\"height\",height);\n\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0,0,0);\n    this.camera = new THREE.PerspectiveCamera(\n      40, // fov = field of view\n      width / height, // aspect ratio\n      1, // near plane\n      1000 // far plane\n    );\n    // this.camera.position.y = 150;\n    this.camera.position.set( 0, 0, 390 );\n\n    // this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n\n   \n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.physicallyCorrectLights = true;\n\n    var object;\n    var myThis = this;\n    var ship_material = new THREE.MeshPhongMaterial( { flatShading: true }  );\n    this.loadModel = function() {\n\n          if (myThis.object != undefined){\n            myThis.object.traverse( function ( child ) {\n\n              // if ( child.isMesh ) child.material = ship_material;\n\n            } );\n\n            // myThis.object.position.z = -1000;\n            // myThis.object.scale.x = 80;\n            // myThis.object.scale.y = 80;\n            // myThis.object.scale.z = 80;\n            // myThis.scene.add( myThis.object );\n            // myThis.subdivide( geometry, 3 );\n            myThis.addCustomSceneObjects();\n            myThis.requestID = window.requestAnimationFrame(myThis.startAnimationLoop);\n          }else{\n          }\n          \n\n        }\n    this.manager = new THREE.LoadingManager( this.loadModel );\n\n        this.manager.onProgress = function ( item, loaded, total ) {\n\n          console.log( item, loaded, total );\n\n        };\n    var textureLoader = new THREE.TextureLoader( this.manager );\n\n    this.texture = textureLoader.load( 'UterusWhole.jpg' );\n    this.onProgress = function( xhr ) {\n\n          if ( xhr.lengthComputable ) {\n\n            var percentComplete = xhr.loaded / xhr.total * 100;\n            console.log( 'model ' + Math.round( percentComplete, 2 ) + '% downloaded' );\n\n          }\n\n        }\n\n    this.onError = function() {}\n\n    this.loader = new OBJLoader( this.manager );\n\n    this.loader.load( 'placenta12.obj', function ( obj ) {\n      // console.log(obj);\n      myThis.object = obj;\n      console.log(obj);\n\n    }, this.onProgress, this.onError );\n    \n    this.renderer.setPixelRatio( window.devicePixelRatio );\n\tthis.renderer.setSize( window.innerWidth, 5400 );\n\t// container.appendChild( renderer.domElement );\n\n\t//renderer.toneMapping = ReinhardToneMapping;\n\tthis.renderer.outputEncoding = THREE.sRGBEncoding;\n\n\tthis.stats = new Stats();\n\t// container.appendChild( stats.dom );\n\n\t// this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\t// this.controls.minDistance = 50;\n\t// this.controls.maxDistance = 300;\n\n\t// window.addEventListener( 'resize', onWindowResize, false );\n\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n    // document.addEventListener( 'mousemove', this.onDocumentMouseMove, false );\n  };\n\n  onDocumentMouseMove = ( event ) => {\n\n    // var windowHalfX = window.innerWidth / 2;\n    // var windowHalfY = window.innerHeight / 2;\n    // var myThis2 = this;\n    //     myThis2.mouseX = ( event.clientX - windowHalfX ) / 2;\n    //     myThis2.mouseY = ( event.clientY - windowHalfY ) / 2;\n\n      }\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n  \tconsole.log(\"this.object.children[1].geometry\",this.object.children[1].geometry);\n\n\tvar a = new THREE.Geometry().fromBufferGeometry( this.object.children[1].geometry );\n\ta.mergeVertices();\n\tthis.object.children[1].geometry.fromGeometry( a );\n\n\n  \tvar geometry = this.object.children[1].geometry;\n\tvar geometry2 = this.object.children[1].geometry;\n\n\t// var geometry = new THREE.SphereBufferGeometry( 30, 20, 10 );\n\t// var geometry22 = new THREE.TorusKnotBufferGeometry( 18, 8, 150, 20 );\n\tthis.group = new THREE.Group();\n\tthis.group2 = new THREE.Group();\n\n\tvar material;\n\n\tmaterial = new THREE.MeshStandardMaterial();\n\tmaterial.color = new THREE.Color( 0xffffff );\n\tmaterial.roughness = params.roughness;\n\tmaterial.metalness = params.metalness;\n\tmaterial.flatShading = false;\n\n\tthis.torusMesh = new THREE.Mesh( geometry, material );\n\tthis.torusMesh.scale.x = 10;\n\tthis.torusMesh.scale.y = 10;\n\tthis.torusMesh.scale.z = 10;\n\t// this.torusMesh.position.z = 10;\n\n\tthis.torusMesh2 = new THREE.Mesh( geometry2, material );\n\tthis.torusMesh2.rotation.z = Math.PI;\n\tthis.torusMesh2.scale.x = 10;\n\tthis.torusMesh2.scale.y = 10;\n\tthis.torusMesh2.scale.z = 10;\n\t// this.torusMesh2.position.z = -10;\n\n\tthis.group.add( this.torusMesh );\n\tthis.group2.add( this.torusMesh2 );\n\t// this.scene.add( this.torusMesh );\n\n\tmaterial = new Nodes.MeshStandardNodeMaterial();\n\tmaterial.color = new THREE.Color( 0xffffff );\n\tmaterial.roughness = params.roughness;\n\tmaterial.metalness = params.metalness;\n\n\tthis.torusMeshNode = new THREE.Mesh( geometry, material );\n\tthis.torusMeshNode.scale.x = 10;\n\tthis.torusMeshNode.scale.y = 10;\n\tthis.torusMeshNode.scale.z = 10;\n\t// this.torusMeshNode.position.z = 10;\n\n\tthis.torusMeshNode2 = new THREE.Mesh( geometry2, material );\n\tthis.torusMeshNode2.rotation.z = Math.PI;\n\tthis.torusMeshNode2.scale.x = 10;\n\tthis.torusMeshNode2.scale.y = 10;\n\tthis.torusMeshNode2.scale.z = 10;\n\t// this.torusMeshNode2.position.z = -10;\n\n\tthis.group2.add(this.torusMeshNode2);\n\tthis.group.add(this.torusMeshNode);\n\t// this.scene.add( this.torusMeshNode );\n\n\tvar geometry = new THREE.PlaneBufferGeometry( 200, 200 );\n\tvar material = new THREE.MeshBasicMaterial();\n\n\tthis.planeMesh = new THREE.Mesh( geometry, material );\n\tthis.planeMesh.position.y = - 50;\n\tthis.planeMesh.rotation.x = - Math.PI * 0.5;\n\tthis.group.add(this.planeMesh);\n\t// this.scene.add( this.planeMesh );\n\t// this.scene.add(this.group);\n\tthis.scene.add(this.group2);\n\n\n\n\tvar a2 = new THREE.Geometry().fromBufferGeometry( this.object.children[2].geometry );\n\ta2.mergeVertices();\n\tthis.object.children[2].geometry.fromGeometry( a2 );\n\n\tconsole.log(this.object.children[2].geometry);\n\n  \tvar geometry_ = this.object.children[2].geometry;\n\tvar geometry2_ = this.object.children[2].geometry;\n\n\t// var geometry = new THREE.SphereBufferGeometry( 30, 20, 10 );\n\t// var geometry22 = new THREE.TorusKnotBufferGeometry( 18, 8, 150, 20 );\n\tthis.group_ = new THREE.Group();\n\tthis.group2_ = new THREE.Group();\n\n\tvar material_;\n\n\tmaterial_ = new THREE.MeshStandardMaterial();\n\tmaterial_.color = new THREE.Color( 0xffffff );\n\tmaterial_.roughness = params.roughness;\n\tmaterial_.metalness = params.metalness;\n\tmaterial_.flatShading = false;\n\n\tthis.torusMesh_ = new THREE.Mesh( geometry_, material_ );\n\tthis.torusMesh_.scale.x = 10;\n\tthis.torusMesh_.scale.y = 10;\n\tthis.torusMesh_.scale.z = 10;\n\t// this.torusMesh.position.z = 10;\n\n\tthis.torusMesh2_ = new THREE.Mesh( geometry2_, material_ );\n\tthis.torusMesh2_.rotation.z = Math.PI;\n\tthis.torusMesh2_.scale.x = 10;\n\tthis.torusMesh2_.scale.y = 10;\n\tthis.torusMesh2_.scale.z = 10;\n\t// this.torusMesh2.position.z = -10;\n\n\tthis.group_.add( this.torusMesh_ );\n\tthis.group2_.add( this.torusMesh2_ );\n\t// this.scene.add( this.torusMesh );\n\n\tmaterial_ = new Nodes.MeshStandardNodeMaterial();\n\tmaterial_.color = new THREE.Color( 0xffffff );\n\tmaterial_.roughness = params.roughness;\n\tmaterial_.metalness = params.metalness;\n\n\tthis.torusMeshNode_ = new THREE.Mesh( geometry_, material_ );\n\tthis.torusMeshNode_.scale.x = 10;\n\tthis.torusMeshNode_.scale.y = 10;\n\tthis.torusMeshNode_.scale.z = 10;\n\t// this.torusMeshNode.position.z = 10;\n\n\tthis.torusMeshNode2_ = new THREE.Mesh( geometry2_, material_ );\n\tthis.torusMeshNode2_.rotation.z = Math.PI;\n\tthis.torusMeshNode2_.scale.x = 10;\n\tthis.torusMeshNode2_.scale.y = 10;\n\tthis.torusMeshNode2_.scale.z = 10;\n\t// this.torusMeshNode2.position.z = -10;\n\n\tthis.group2_.add(this.torusMeshNode2_);\n\tthis.group_.add(this.torusMeshNode_);\n\t// this.scene.add( this.torusMeshNode );\n\n\tvar geometry = new THREE.PlaneBufferGeometry( 200, 200 );\n\tvar material = new THREE.MeshBasicMaterial();\n\n\tthis.planeMesh_ = new THREE.Mesh( geometry, material );\n\tthis.planeMesh_.position.y = - 50;\n\tthis.planeMesh_.rotation.x = - Math.PI * 0.5;\n\tthis.group_.add(this.planeMesh_);\n\t// this.scene.add( this.planeMesh );\n\t// this.scene.add(this.group);\n\tthis.scene.add(this.group2_);\n\n\tvar a3 = new THREE.Geometry().fromBufferGeometry( this.object.children[0].geometry );\n\ta3.mergeVertices();\n\tthis.object.children[0].geometry.fromGeometry( a3 );\n\n\tconsole.log(this.object.children[0].geometry);\n\n  \tvar geometry__ = this.object.children[0].geometry;\n\tvar geometry2__ = this.object.children[0].geometry;\n\n\t// var geometry = new THREE.SphereBufferGeometry( 30, 20, 10 );\n\t// var geometry22 = new THREE.TorusKnotBufferGeometry( 18, 8, 150, 20 );\n\tthis.group__ = new THREE.Group();\n\tthis.group2__ = new THREE.Group();\n\n\tvar material__;\n\n\tmaterial__ = new THREE.MeshStandardMaterial();\n\tmaterial__.color = new THREE.Color( 0xffffff );\n\tmaterial__.roughness = params.roughness;\n\tmaterial__.metalness = params.metalness;\n\tmaterial__.flatShading = false;\n\n\tthis.torusMesh__ = new THREE.Mesh( geometry__, material__ );\n\tthis.torusMesh__.scale.x = 10;\n\tthis.torusMesh__.scale.y = 10;\n\tthis.torusMesh__.scale.z = 10;\n\t// this.torusMesh.position.z = 10;\n\n\tthis.torusMesh2__ = new THREE.Mesh( geometry2__, material__ );\n\tthis.torusMesh2__.rotation.z = Math.PI;\n\tthis.torusMesh2__.scale.x = 10;\n\tthis.torusMesh2__.scale.y = 10;\n\tthis.torusMesh2__.scale.z = 10;\n\t// this.torusMesh2.position.z = -10;\n\n\tthis.group__.add( this.torusMesh__ );\n\tthis.group2__.add( this.torusMesh2__ );\n\t// this.scene.add( this.torusMesh );\n\n\tmaterial__ = new Nodes.MeshStandardNodeMaterial();\n\tmaterial__.color = new THREE.Color( 0xffffff );\n\tmaterial__.roughness = params.roughness;\n\tmaterial__.metalness = params.metalness;\n\n\tthis.torusMeshNode__ = new THREE.Mesh( geometry__, material__ );\n\tthis.torusMeshNode__.scale.x = 10;\n\tthis.torusMeshNode__.scale.y = 10;\n\tthis.torusMeshNode__.scale.z = 10;\n\t// this.torusMeshNode.position.z = 10;\n\n\tthis.torusMeshNode2__ = new THREE.Mesh( geometry2__, material__ );\n\tthis.torusMeshNode2__.rotation.z = Math.PI;\n\tthis.torusMeshNode2__.scale.x = 10;\n\tthis.torusMeshNode2__.scale.y = 10;\n\tthis.torusMeshNode2__.scale.z = 10;\n\t// this.torusMeshNode2.position.z = -10;\n\tthis.group.position.y = 90;\n\tthis.group2.position.y = 90;\n\tthis.group_.position.y = 90;\n\tthis.group2_.position.y = 90;\n\tthis.group__.position.y = 90;\n\tthis.group2__.position.y = 90;\n\tthis.group2__.add(this.torusMeshNode2__);\n\tthis.group__.add(this.torusMeshNode__);\n\t// this.scene.add( this.torusMeshNode );\n\n\tvar geometry = new THREE.PlaneBufferGeometry( 200, 200 );\n\tvar material = new THREE.MeshBasicMaterial();\n\n\tthis.planeMesh__ = new THREE.Mesh( geometry, material );\n\tthis.planeMesh__.position.y = - 50;\n\tthis.planeMesh__.rotation.x = - Math.PI * 0.5;\n\tthis.group__.add(this.planeMesh__);\n\t// this.scene.add( this.planeMesh );\n\t// this.scene.add(this.group);\n\tthis.scene.add(this.group2__);\n\n\n\n  \tTHREE.DefaultLoadingManager.onLoad = function ( ) {\n\n\t\tpmremGenerator.dispose();\n\n\t};\n\n\tvar hdrUrls = [ 'px.hdr', 'nx.hdr', 'py.hdr', 'ny.hdr', 'pz.hdr', 'nz.hdr' ];\n\tvar myThis = this;\n\tthis.hdrCubeMap = new HDRCubeTextureLoader()\n\t\t.setPath( 'textures/cube/pp_cube_map/' )\n\t\t.setDataType( THREE.UnsignedByteType )\n\t\t.load( hdrUrls, function () {\n\t\t\thdrCubeRenderTarget = pmremGenerator.fromCubemap( myThis.hdrCubeMap );\n\n\t\t\tmyThis.hdrCubeMap.magFilter = THREE.LinearFilter;\n\t\t\tmyThis.hdrCubeMap.needsUpdate = true;\n\n\t\t} );\n\n\tvar ldrUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ];\n\tthis.ldrCubeMap = new THREE.CubeTextureLoader()\n\t\t.setPath( './textures/cube/pisa/' )\n\t\t.load( ldrUrls, function () {\n\n\t\t\tmyThis.ldrCubeMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tldrCubeRenderTarget = pmremGenerator.fromCubemap( myThis.ldrCubeMap );\n\n\t\t} );\n\n\n\tvar rgbmUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ];\n\tthis.rgbmCubeMap = new THREE.CubeTextureLoader()\n\t\t.setPath( './textures/cube/pisaRGBM16/' )\n\t\t.load( rgbmUrls, function () {\n\n\t\t\tmyThis.rgbmCubeMap.encoding = THREE.RGBM16Encoding;\n\t\t\tmyThis.rgbmCubeMap.format = THREE.RGBAFormat;\n\n\t\t\trgbmCubeRenderTarget = pmremGenerator.fromCubemap( myThis.rgbmCubeMap );\n\n\t\t\tmyThis.rgbmCubeMap.magFilter = THREE.LinearFilter;\n\t\t\tmyThis.rgbmCubeMap.needsUpdate = true;\n\n\t\t} );\n\tvar pmremGenerator = new THREE.PMREMGenerator( this.renderer );\n\tpmremGenerator.compileCubemapShader();\n\n\tvar envScene = this.getEnvScene();\n\tgeneratedCubeRenderTarget = pmremGenerator.fromScene( envScene, 0.04 );\n\n\t\n    \n  };\n\n  startAnimationLoop = () => {\n  \t\n \t// \n  \t\t\n  \t\tif (this.object != undefined){\n  \t\tthis.stats.begin();\n\t  \tthis.torusMesh.visible = ! params.nodes;\n\t\tthis.torusMeshNode.visible = params.nodes;\n\n\t\tthis.torusMesh.material.roughness = params.roughness;\n\t\tthis.torusMesh.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode.material.roughness = params.roughness;\n\t\tthis.torusMeshNode.material.metalness = params.metalness;\n\n\t\tthis.torusMesh2.visible = ! params.nodes;\n\t\tthis.torusMeshNode2.visible = params.nodes;\n\n\t\tthis.torusMesh2.material.roughness = params.roughness;\n\t\tthis.torusMesh2.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode2.material.roughness = params.roughness;\n\t\tthis.torusMeshNode2.material.metalness = params.metalness;\n\n\t\tthis.torusMesh_.visible = ! params.nodes;\n\t\tthis.torusMeshNode_.visible = params.nodes;\n\n\t\tthis.torusMesh_.material.roughness = params.roughness;\n\t\tthis.torusMesh_.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode_.material.roughness = params.roughness;\n\t\tthis.torusMeshNode_.material.metalness = params.metalness;\n\n\t\tthis.torusMesh2_.visible = ! params.nodes;\n\t\tthis.torusMeshNode2_.visible = params.nodes;\n\n\t\tthis.torusMesh2_.material.roughness = params.roughness;\n\t\tthis.torusMesh2_.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode2_.material.roughness = params.roughness;\n\t\tthis.torusMeshNode2_.material.metalness = params.metalness;\n\n\t\tthis.torusMesh__.visible = ! params.nodes;\n\t\tthis.torusMeshNode__.visible = params.nodes;\n\n\t\tthis.torusMesh__.material.roughness = params.roughness;\n\t\tthis.torusMesh__.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode__.material.roughness = params.roughness;\n\t\tthis.torusMeshNode__.material.metalness = params.metalness;\n\n\t\tthis.torusMesh2__.visible = ! params.nodes;\n\t\tthis.torusMeshNode2__.visible = params.nodes;\n\n\t\tthis.torusMesh2__.material.roughness = params.roughness;\n\t\tthis.torusMesh2__.material.metalness = params.metalness;\n\n\t\tthis.torusMeshNode2__.material.roughness = params.roughness;\n\t\tthis.torusMeshNode2__.material.metalness = params.metalness;\n\n\t\tvar renderTarget, cubeMap;\n\n\t\tswitch ( params.envMap ) {\n\n\t\t\tcase 'Generated':\n\t\t\t\trenderTarget = generatedCubeRenderTarget;\n\t\t\t\tcubeMap = generatedCubeRenderTarget.texture;\n\t\t\t\tbreak;\n\t\t\tcase 'LDR':\n\t\t\t\trenderTarget = ldrCubeRenderTarget;\n\t\t\t\tcubeMap = ldrCubeMap;\n\t\t\t\tbreak;\n\t\t\tcase 'HDR':\n\t\t\t\trenderTarget = hdrCubeRenderTarget;\n\t\t\t\tcubeMap = hdrCubeMap;\n\t\t\t\tbreak;\n\t\t\tcase 'RGBM16':\n\t\t\t\trenderTarget = rgbmCubeRenderTarget;\n\t\t\t\tcubeMap = rgbmCubeMap;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tvar newEnvMap = renderTarget ? renderTarget.texture : null;\n\n\t\tif ( newEnvMap && newEnvMap !== this.torusMesh.material.envMap ) {\n\n\t\t\tthis.torusMesh.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode.material.needsUpdate = true;\n\n\t\t\tthis.planeMesh.material.map = newEnvMap;\n\t\t\tthis.planeMesh.material.needsUpdate = true;\n\n\t\t\tthis.torusMesh2.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh2.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode2.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode2.material.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( params.animate ) {\n\n\t\t\tthis.torusMesh.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode.rotation.y = this.torusMesh.rotation.y;\n\n\t\t\tthis.torusMesh2.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode2.rotation.y = this.torusMesh2.rotation.y;\n\n\t\t}\n\n\t\tif ( newEnvMap && newEnvMap !== this.torusMesh_.material.envMap ) {\n\n\t\t\tthis.torusMesh_.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh_.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode_.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode_.material.needsUpdate = true;\n\n\t\t\tthis.planeMesh_.material.map = newEnvMap;\n\t\t\tthis.planeMesh_.material.needsUpdate = true;\n\n\t\t\tthis.torusMesh2_.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh2_.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode2_.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode2_.material.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( params.animate ) {\n\n\t\t\tthis.torusMesh_.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode_.rotation.y = this.torusMesh_.rotation.y;\n\n\t\t\tthis.torusMesh2_.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode2_.rotation.y = this.torusMesh2_.rotation.y;\n\n\t\t}\n\n\t\tif ( newEnvMap && newEnvMap !== this.torusMesh__.material.envMap ) {\n\n\t\t\tthis.torusMesh__.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh__.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode__.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode__.material.needsUpdate = true;\n\n\t\t\tthis.planeMesh__.material.map = newEnvMap;\n\t\t\tthis.planeMesh__.material.needsUpdate = true;\n\n\t\t\tthis.torusMesh2__.material.envMap = newEnvMap;\n\t\t\tthis.torusMesh2__.material.needsUpdate = true;\n\n\t\t\tthis.torusMeshNode2__.material.envMap = newEnvMap;\n\t\t\tthis.torusMeshNode2__.material.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( params.animate ) {\n\n\t\t\tthis.torusMesh__.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode__.rotation.y = this.torusMesh__.rotation.y;\n\n\t\t\tthis.torusMesh2__.rotation.y += 0.05;\n\t\t\tthis.torusMeshNode2__.rotation.y = this.torusMesh2__.rotation.y;\n\n\t\t}\n\n\t\tthis.planeMesh.visible = params.debug;\n\t\tthis.planeMesh_.visible = params.debug;\n\t\tthis.planeMesh__.visible = params.debug;\n\n\t\tif ((this.group != undefined) && (this.group2 != undefined)){\n\t      // this.camera.rotation.y += 0.1;\n\t      // this.group.position.y = radiusL * Math.cos( angle );  \n\t      // this.group.position.x = radiusL * Math.sin( angle );\n\t      // this.group.rotation.z = Math.PI - angle;\n\n\t      // this.group2.position.y = radiusS * Math.cos( angle );  \n\t      // this.group2.position.x = radiusS * Math.sin( angle );\n\t      // this.group2.rotation.z = Math.PI - angle;\n\t      // angle += 0.01;\n\t      // var xAdd = ( this.mouseX - this.camera.position.x ) * .05;\n\t      // var nahee = this.camera.position.x + xAdd;\n\t      // this.camera.position.x = nahee;\n\t      // this.camera.position.y += ( - this.mouseY - this.camera.position.y ) * .05;\n\t    }\n    \tthis.camera.position.y = -20;\n    \t// this.camera.position.z = 0;\n\t\tthis.scene.background = cubeMap;\n\t\tthis.renderer.toneMappingExposure = params.exposure;\n\n\t\t// this.camera.lookAt( this.scene.position);\n\t    this.renderer.render(this.scene, this.camera);\n\t    this.stats.end();\n\n\t}\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n  };\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  render() {\n    return <div style={style} ref={ref => (this.el = ref)} />;\n  }\n}\n\n\nexport default Placenta;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { AsciiEffect } from 'three/examples/jsm/effects/AsciiEffect.js';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader.js';\nimport { GUI } from 'three/examples/jsm/libs/dat.gui.module.js';\nimport { SubdivisionModifier } from 'three/examples/jsm/modifiers/SubdivisionModifier.js';\nimport * as Nodes from 'three/examples/jsm/nodes/Nodes.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\n\nvar angle = 0;\nvar radiusL = 32;\nvar radiusS = 14; \n\nconst style = {\n  height: 5400 // we can control scene size by setting container dimensions\n};\n\nconst params_bloom = {\n\t\texposure: 1,\n\t\tbloomStrength: 1,\n\t\tbloomThreshold: .5,\n\t\tbloomRadius: 1\n\t};\n\nvar params = {\n\tenvMap: 'HDR',\n\troughness: 0.0,\n\tmetalness: 0.0,\n\texposure: 1.0,\n\tnodes: true,\n\tanimate: true,\n\tdebug: false\n};\n\nvar container, stats;\nvar camera, scene, renderer;\nvar torusMesh, planeMesh;\nvar generatedCubeRenderTarget, ldrCubeRenderTarget, hdrCubeRenderTarget, rgbmCubeRenderTarget;\nvar ldrCubeMap, hdrCubeMap, rgbmCubeMap;\n\nclass PlacentaAll extends Component {\n  componentDidMount() {\n    this.sceneSetup();\n    \n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  getEnvScene = () => {\n\n\t\tvar envScene = new THREE.Scene();\n\n\t\tvar geometry = new THREE.BoxBufferGeometry();\n\t\tgeometry.deleteAttribute( 'uv' );\n\t\tvar roomMaterial = new THREE.MeshStandardMaterial( { metalness: 0, side: THREE.BackSide } );\n\t\tvar room = new THREE.Mesh( geometry, roomMaterial );\n\t\troom.scale.setScalar( 10 );\n\t\tenvScene.add( room );\n\n\t\tvar mainLight = new THREE.PointLight( 0xffffff, 50, 0, 2 );\n\t\tenvScene.add( mainLight );\n\n\t\tvar lightMaterial = new THREE.MeshLambertMaterial( { color: 0x000000, emissive: 0xffffff, emissiveIntensity: 10 } );\n\n\t\tvar light1 = new THREE.Mesh( geometry, lightMaterial );\n\t\tlight1.material.color.setHex( 0xff0000 );\n\t\tlight1.position.set( - 5, 2, 0 );\n\t\tlight1.scale.set( 0.1, 1, 1 );\n\t\tenvScene.add( light1 );\n\n\t\tvar light2 = new THREE.Mesh( geometry, lightMaterial.clone() );\n\t\tlight2.material.color.setHex( 0x00ff00 );\n\t\tlight2.position.set( 0, 5, 0 );\n\t\tlight2.scale.set( 1, 0.1, 1 );\n\t\tenvScene.add( light2 );\n\n\t\tvar light3 = new THREE.Mesh( geometry, lightMaterial.clone() );\n\t\tlight3.material.color.setHex( 0x0000ff );\n\t\tlight3.position.set( 2, 1, 5 );\n\t\tlight3.scale.set( 1.5, 2, 0.1 );\n\t\tenvScene.add( light3 );\n\n\t\treturn envScene;\n\n\t}\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = 5400;\n    console.log(\"height\",height);\n\n    this.scene = new THREE.Scene();\n    {\n\t  const color = 0x3f7b9d;  // white\n\t  const near = 0;\n\t  const far = 60;\n\t  this.scene.fog = new THREE.Fog(color);\n\t}\n    this.scene.background = new THREE.Color(0,0,0);\n    this.camera = new THREE.PerspectiveCamera(\n      40, // fov = field of view\n      width / height, // aspect ratio\n      1, // near plane\n      1000 // far plane\n    );\n    // this.camera.position.y = 150;\n    this.camera.position.set( 0, 0, 390 );\n\n    // this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n\n   \n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.physicallyCorrectLights = true;\n    // this.renderer.toneMapping = THREE.ReinhardToneMapping;\n\n //    this.renderScene = new RenderPass( this.scene, this.camera );\n\n\t// this.bloomPass = new UnrealBloomPass( new THREE.Vector2( window.innerWidth, window.innerHeight ), 1.5, 0.4, 0.85 );\n\t// this.bloomPass.threshold = params_bloom.bloomThreshold;\n\t// this.bloomPass.strength = params_bloom.bloomStrength;\n\t// this.bloomPass.radius = params_bloom.bloomRadius;\n\n\t// this.composer = new EffectComposer( this.renderer );\n\t// this.composer.addPass( this.renderScene );\n\t// this.composer.addPass( this.bloomPass );\n\n    const light = new THREE.AmbientLight( 0x000000 ,500); // soft white light\n    light.position.set( 0, 0, 0 );\n\tthis.scene.add( light );\n\n\t\tconst lights = [];\n\t\t\tlights[ 0 ] = new THREE.PointLight( 0xffffff, 100, 0 );\n\t\t\tlights[ 1 ] = new THREE.PointLight( 0xffffff, 100, 0 );\n\t\t\tlights[ 2 ] = new THREE.PointLight( 0xffffff, 100, 0 );\n\t\t\tlights[ 3 ] = new THREE.PointLight( 0xffffff, 100, 0 );\n\t\t\tlights[ 4 ] = new THREE.PointLight( 0xffffff, 100, 0 );\n\t\t\tlights[ 5 ] = new THREE.PointLight( 0xffffff, 100, 0 );\n\n\t\t\tlights[ 0 ].position.set( 0, 60, 40 );\n\t\t\tlights[ 1 ].position.set( 10, 20, 40 );\n\t\t\tlights[ 2 ].position.set( - 10, - 20, - 40 );\n\t\t\tlights[ 3 ].position.set( 0, -400, 0 );\n\t\t\tlights[ 4 ].position.set( 10, -20, 40 );\n\t\t\tlights[ 5 ].position.set( - 10, 130, 0 );\n\t\t\tthis.scene.add( lights[ 0 ] );\n\t\t\tthis.scene.add( lights[ 1 ] );\n\t\t\tthis.scene.add( lights[ 2 ] );\n\t\t\tthis.scene.add( lights[ 3 ] );\n\t\t\tthis.scene.add( lights[ 4 ] );\n\t\t\tthis.scene.add( lights[ 5 ] );\n    var object;\n    var myThis = this;\n    var ship_material = new THREE.MeshPhongMaterial( { \n    \tflatShading: false,\n    \tcolor: 0x2194ce,\n    \t// color:0x7544ba,\n    \temissive: 0x5e1919,\n    \tspecular: 0xf79a9a,\n    \temissiveIntensity:3,\n    \t// specular: 0x000000,\n    \tshininess:100,\n    \trefractionRatio:.56,\n    \tcombine: THREE.AddOperation,\n    \treflectivity: 1\n\n    }  );\n\n    this.group_ = new THREE.Group();\n\n    this.loadModel = function() {\n\n          if (myThis.object != undefined){\n            myThis.object.traverse( function ( child ) {\n            \t// child.geometry.mergeVertices();\n\t\t\t\t\n\t\t\t\t// myThis.scene.add( mesh2 );\n\t\t\t\tif(child.geometry !== undefined){ \n\t\t\t\t\tconst geometry2 = new THREE.Geometry().fromBufferGeometry( child.geometry );\n\t\t\t\t\tgeometry2.mergeVertices();\n\t\t\t\t\tconst mesh2 = new THREE.Mesh( geometry2, ship_material );\n\t\t\t\t\tmesh2.position.set(0, 100, 0); \n\t\t\t\t\tmesh2.scale.set(5, 5, 5); \n\t\t\t\t\tmesh2.rotation.set(0, 0, Math.PI); \n\t\t\t\t\tmyThis.group_.add( mesh2 );\n\t\t\t\t\tconsole.log(\"hi\");\n\t\t\t\t}\n\t\t\t\t\n\n            } );\n\n            // myThis.object.position.z = -1000;\n            // myThis.object.scale.x = 80;\n            // myThis.object.scale.y = 80;\n            // myThis.object.scale.z = 80;\n\n            // myThis.subdivide( geometry, 3 );\n            myThis.addCustomSceneObjects();\n            myThis.requestID = window.requestAnimationFrame(myThis.startAnimationLoop);\n          }else{\n          }\n          \n\n        }\n    this.manager = new THREE.LoadingManager( this.loadModel );\n\n        this.manager.onProgress = function ( item, loaded, total ) {\n\n          console.log( item, loaded, total );\n\n        };\n\n    this.onProgress = function( xhr ) {\n\n          if ( xhr.lengthComputable ) {\n\n            var percentComplete = xhr.loaded / xhr.total * 100;\n            console.log( 'model ' + Math.round( percentComplete, 2 ) + '% downloaded' );\n\n          }\n\n        }\n\n    this.onError = function() {}\n\n    this.loader = new OBJLoader( this.manager );\n\n    this.loader.load( 'comp_baby_scene1.obj', function ( obj ) {\n      // console.log(obj);\n      myThis.object = obj;\n      console.log(obj);\n\n    }, this.onProgress, this.onError );\n    \n    this.renderer.setPixelRatio( window.devicePixelRatio );\n\tthis.renderer.setSize( window.innerWidth, 5400 );\n\t// this.composer.setSize( window.innerWidth, 5400 );\n\t// container.appendChild( renderer.domElement );\n\n\t// renderer.toneMapping = ReinhardToneMapping;\n\tthis.renderer.outputEncoding = THREE.sRGBEncoding;\n\n\tthis.stats = new Stats();\n\t// container.appendChild( stats.dom );\n\n\t// this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\t// this.controls.minDistance = 50;\n\t// this.controls.maxDistance = 300;\n\n\t// window.addEventListener( 'resize', onWindowResize, false );\n\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n    // document.addEventListener( 'mousemove', this.onDocumentMouseMove, false );\n  };\n\n\n\tcubemap = (pathParam, pathFormat) => {\n\n\t\tconst path = pathParam;\n\t\tconst format = pathFormat;\n\t\tconst urls = [\n\t\t\tpath + 'posx' + format, path + 'negx' + format,\n\t\t\tpath + 'posy' + format, path + 'negy' + format,\n\t\t\tpath + 'posz' + format, path + 'negz' + format\n\t\t];\n\n\t\tconst textureCube = new THREE.CubeTextureLoader().load( urls );\n\n\t\t// library[ textureCube.uuid ] = textureCube;\n\n\t\treturn textureCube;\n\n\t};\n\n  onDocumentMouseMove = ( event ) => {\n\n    // var windowHalfX = window.innerWidth / 2;\n    // var windowHalfY = window.innerHeight / 2;\n    // var myThis2 = this;\n    //     myThis2.mouseX = ( event.clientX - windowHalfX ) / 2;\n    //     myThis2.mouseY = ( event.clientY - windowHalfY ) / 2;\n\n      }\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n  \tthis.scene.add(this.group_);\n\t\n    \n  };\n\n  startAnimationLoop = () => {\n  \t\n \t// \n  \t\t\n    \tthis.camera.position.y = -20;\n    \t// this.camera.position.z = 0;\n\t\t// this.scene.background = cubeMap;\n\t\t// this.renderer.toneMappingExposure = params.exposure;\n\n\t\t// this.camera.lookAt( this.scene.position);\n\t    this.renderer.render(this.scene, this.camera);\n\t    // this.composer.render();\n\t    this.group_.rotation.y += 0.04;\n\t    this.stats.end();\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n  };\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  render() {\n    return <div style={style} ref={ref => (this.el = ref)} />;\n  }\n}\n\n\nexport default PlacentaAll;\n","// some utils\r\n\r\nimport * as THREE from \"three\";\r\n\r\nfunction addOrMergeProp( material, propName, data ) {\r\n\r\n\tif ( material[ propName ] ) {\r\n\r\n\t\tObject.assign( material[ propName ], data );\r\n\r\n\t} else {\r\n\r\n\t\tmaterial[ propName ] = data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//serialize\r\nfunction toJSON(){\r\n\tvar res = THREE.Material.prototype.toJSON.call(\r\n\t\tthis, \r\n\t\tundefined, \r\n\t\tthis._serializationManager.serialize.bind(this._serializationManager)\r\n\t)\r\n\tthis._serializationManager.afterSerialize.call(this._serializationManager,res)\r\n\treturn res\r\n}\r\n\r\n// from three's texture transform api, to be applied to a uniform matrix\r\nfunction setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\tvar c = Math.cos( rotation );\r\n\tvar s = Math.sin( rotation );\r\n\r\n\tthis.set(\r\n\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t0, 0, 0\r\n\t);\r\n\r\n}\r\n\r\n//spec gloss stuff ---------------------------------------------------------\r\n\r\n//this extends the shader to use specular gloss PBR model instead of rough/metal\r\n\r\nvar specularMapFragmentChunk = [\r\n\t'vec3 specularFactor = specular;',\r\n\t'#ifdef USE_SPECULARMAP',\r\n\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t'#endif',\r\n\t// 'gl_FragColor = vec4(vec3(specularFactor),1.);',\r\n\t// 'return;',\r\n].join( '\\n' );\r\n\r\nvar glossinessMapFragmentChunk = [\r\n\t'float glossinessFactor = glossiness;',\r\n\t'#ifdef USE_GLOSSINESSMAP',\r\n\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t// 'gl_FragColor = vec4(vec3(glossinessFactor),1.);',\r\n\t// 'return;',\r\n\t'#endif',\r\n].join( '\\n' );\r\n\r\nvar lightPhysicalFragmentChunk = [\r\n\t'PhysicalMaterial material;',\r\n\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t'material.specularColor = specularFactor.rgb;',\r\n].join( '\\n' );\r\n\r\nvar SHADER_INCLUDES_SPEC_GLOSS = {\r\n\troughnessmap_fragment: specularMapFragmentChunk,\r\n\tmetalnessmap_fragment: glossinessMapFragmentChunk,\r\n\tlights_physical_fragment: lightPhysicalFragmentChunk,\r\n};\r\n\r\nexport function decorateMaterialWithSpecGloss( material ) {\r\n\r\n\tif ( material.isSpecGlossExtended ) return material;\r\n\r\n\tmaterial.isSpecGlossExtended = true;\r\n\r\n\t// these are the extra uniforms, but instead of being stored in .userData, or some such place\r\n\t// a designated prop could be used\r\n\tvar shaderUniforms = {\r\n\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ), type: 'vec3', stage: 'fragment' }, //fragment can be ommitted (defaults to it) but for sake of clarity\r\n\t\tglossiness: { value: 1, type: 'float', stage: 'fragment' },\r\n\t\tglossinessMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t\tspecularMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t};\r\n\r\n\tvar shaderIncludes = Object.assign({},SHADER_INCLUDES_SPEC_GLOSS)\r\n\r\n\tvar defines = {USE_GLOSSINESSMAP: ''}\r\n\r\n\t//conflicts could be resolved here\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\taddOrMergeProp( material, 'defines', defines );\r\n\r\n\tdelete material.metalnessMap\r\n\tdelete material.roughnessMap\r\n\r\n\t//expose uniforms as props for a cleaner interface (but shaderUniforms is also available so this can be omitted)\r\n\t//it just leads to a cleaner more familiar interface (PhongMaterial has specularMap, so this now has it too)\r\n\tfor ( let propName in shaderUniforms ) {\r\n\r\n\t\tObject.defineProperty( material, propName, {\r\n\t\t\tget: ()=> shaderUniforms[ propName ].value,\r\n\t\t\tset: ( v )=> (shaderUniforms[ propName ].value = v),\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\tvar f = function(data,meta){\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSpecGlossExtended = true\r\n\t\tdata.glossiness = this.glossiness\r\n\t\tdata.specular = this.specular.getHex()\r\n\t\tif(this.glossinessMap && this.glossinessMap.isTexture) data.glossinessMap = this.glossinessMap.toJSON( meta ).uuid \r\n\t}.bind(material)\r\n\r\n\tmaterial._serializationManager.addFunction(f)\r\n\t\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n// multi uv stuff ---------------------------------------------------------\r\n\r\n// this moves the transform from textures to the material, textures become just data\r\n\r\n//list of maps to be extended, these are easy\r\nvar DEFAULT_MAP_LIST = [\r\n\t'alphaMap',\r\n\t'specularMap',\r\n\t'map',\r\n\t'emissiveMap',\r\n\t'metalnessMap',\r\n\t'roughnessMap',\r\n\t'glossinessMap' //this one is from the other example, but if its there it should work, this can be solved to work together somehow\r\n];\r\n\r\n//this can be programatic\r\n//it tells the extension where to look for certain maps\r\n//these follow the /texture2D( $mapname, vUv )/ pattern\r\n//normal map is a bit more complex and would require a non programatic chunk \r\nvar PROP_TO_CHUNK_MAP = {\r\n\t'alphaMap': 'alphamap_fragment',\r\n\t'specularMap': 'specularmap_fragment',\r\n\t'map': 'map_fragment',\r\n\t'emissiveMap': 'emissivemap_fragment',\r\n\t'metalnessMap': 'metalnessmap_fragment',\r\n\t'roughnessMap': 'roughnessmap_fragment',\r\n\t'glossinessMap': 'metalnessmap_fragment', //this one cant be programatic because it belongs to another override, could be a specific check somewhere else\r\n\t'specularMapGloss': 'roughnessmap_fragment',\r\n};\r\n\r\n//some utils\r\n\r\nvar mapRegex = /texture2D\\( (.*Map|map), vUv \\)/gm //look for the pattern /texture2D( $someMap, vUv )/\r\n\r\n//because the other extension changes roughnessMap to specularMap we need the $1 to replace the name, otherwise it could be `mapName`\r\nfunction getReplaceString(mapName){\r\n\treturn `texture2D( $1, ( ${getUniformNameFromProp(mapName)} * vec3( vUv, 1. ) ).xy )`\r\n}\r\n\r\n//in order to keep the uniform name obvious that it belongs to the GLSL context, and to make it as private sounding as possible\r\nfunction getUniformNameFromProp(prop){\r\n\treturn `u_${prop}Transform`\r\n}\r\n\r\n//a utility to add the necessary transform properties to a material based on an arbitrary map name\r\n//so if specularMap is provided it will create these Vector2, a float, and an updateMatrix method\r\n//this is very similar to the Texture transform interface the only difference being that the props are prefixed\r\n//myTexture.repeat vs myMaterial.specularMapRepeat \r\nfunction addMapTransformPropsToMaterial( material, mapName ){\r\n\r\n\tlet _mapName = mapName\r\n\tmaterial[`${mapName}Repeat`] = new THREE.Vector2(1,1)\r\n\tmaterial[`${mapName}Offset`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Center`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Rotation`] = 0\r\n\tmaterial[`${mapName}UpdateMatrix`] = function(){\r\n\t\tthis.shaderUniforms[getUniformNameFromProp(_mapName)].value\r\n\t\t.setUvTransform(\r\n\t\t\tthis[`${_mapName}Offset`].x,\r\n\t\t\tthis[`${_mapName}Offset`].y, \r\n\t\t\tthis[`${_mapName}Repeat`].x,\r\n\t\t\tthis[`${_mapName}Repeat`].y, \r\n\t\t\tthis[`${_mapName}Rotation`], \r\n\t\t\tthis[`${_mapName}Center`].x,\r\n\t\t\tthis[`${_mapName}Center`].y, \r\n\t\t)\r\n\t}.bind(material)\r\n}\r\n\r\n\r\nexport default function decorateMaterialWithPerMapTransforms( material, mapList ) {\r\n\r\n\tif ( material.isPerMapTransformExtended ) return material;\r\n\r\n\tmaterial.isPerMapTransformExtended = true;\r\n\r\n\t//one can provide a subset from outside\r\n\tmapList = mapList || DEFAULT_MAP_LIST;\r\n\r\n\tvar shaderUniforms = {}\r\n\tvar shaderIncludes = {}\r\n\tvar serialize = []\r\n\r\n\tfor ( var i = 0; i < mapList.length; i ++ ) {\r\n\r\n\t\tvar mapName = mapList[ i ];\r\n\r\n\r\n\t\tif ( material[ mapName ] !== undefined ) {\r\n\r\n\t\t\taddMapTransformPropsToMaterial(material, mapName)\r\n\r\n\t\t\tvar uniform = { value: new THREE.Matrix3(), type:'mat3', stage: 'fragment' };\r\n\t\t\tuniform.value.setUvTransform = setUvTransform.bind( uniform.value );\r\n\r\n\t\t\tshaderUniforms[getUniformNameFromProp(mapName)] = uniform\r\n\r\n\t\t\t//this is for resolving the conflict, its not the most elegant solution but it works\r\n\t\t\t//i believe that this would be solved by refactoring the shader templates\r\n\t\t\tvar lookup = mapName\r\n\t\t\tif( material.isSpecGlossExtended && mapName === 'specularMap'){\r\n\t\t\t\tlookup = 'specularMapGloss' \r\n\t\t\t}\r\n\t\t\tserialize.push(mapName)\r\n\r\n\t\t\t//based on the map name ie. specularMap or even an extended glossinessMap pick a chunk\r\n\t\t\tvar chunkName = PROP_TO_CHUNK_MAP[lookup]\r\n\r\n\t\t\t//if there already is a chunk from some extension, pick that, otherwise copy the default chunk\r\n\t\t\tvar shaderChunk = (material.shaderIncludes && material.shaderIncludes[chunkName]) || THREE.ShaderChunk[chunkName]\r\n\r\n\t\t\t//apply the string transformation, this contains the copy of whatever chunk was provided (default or custom)\r\n\t\t\tshaderChunk = shaderChunk.replace( mapRegex , getReplaceString(mapName) )\r\n\r\n\t\t\t//provide this copy as the include chunk, this shader wont look up THREE.ShaderChunk \r\n\t\t\t//and doesnt have to wait for onBeforeCompile to do the transformation\r\n\t\t\t//final transformed chunk is already stored here in this context sync\r\n\t\t\tshaderIncludes[ chunkName ] = shaderChunk\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//combine with other chunks\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction(((data,meta)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isPerMapTransformExtended = true\r\n\r\n\t\tserialize.forEach(mapName=>{\r\n\t\t\tdata[`${mapName}Repeat`] = material[`${mapName}Repeat`].toArray()\r\n\t\t\tdata[`${mapName}Offset`] = material[`${mapName}Offset`].toArray()\r\n\t\t\tdata[`${mapName}Center`] = material[`${mapName}Center`].toArray()\r\n\t\t\tdata[`${mapName}Rotation`] = material[`${mapName}Rotation`]\r\n\t\t})\r\n\r\n\t\treturn data\r\n\r\n\t}).bind(material))\r\n\r\n\r\n\tmaterial._serializationManager.addAfterFunction(\r\n\t\tfunction( data ){\r\n\t\t\tdelete data.roughnessMap\r\n\t\t\tdelete data.roughness\r\n\t\t\tdelete data.metalnessMap\r\n\t\t\tdelete data.metalness\t\r\n\t\t}\r\n\t)\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n}\r\n\r\n// simple instance stuff from lambert example  ---------------------------------------------------------\r\n\r\n//this is a stage after begin_vertex, this would be more elegant with hooks and template refactor\r\nvar after_vertex_transform_chunk = `\r\n\ttransformed *= instanceScale; //the value present in transformed is in model space, \r\n\ttransformed = transformed + instanceOffset;\r\n`\r\n\r\nexport function decorateMaterialWithSimpleInstancing( material ) {\r\n\tconsole.log(\"shaderIncludes\");\r\n\tif( material.isSimpleInstanceExtended ) return material\r\n\r\n\tmaterial.isSimpleInstanceExtended = true \r\n\t\r\n\t//make a custom chunk that includes a copy of the default chunk from THREE.ShaderChunk\r\n\t//followed by a custom chunk, that is simply appended to the copy\r\n\tvar shaderIncludes = { \r\n\t\tbegin_vertex:`\r\n\t\t\t${THREE.ShaderChunk.begin_vertex}\r\n\t\t\t${after_vertex_transform_chunk}\r\n\t\t` \r\n\t}\r\n\r\n\tconsole.log(\"shaderIncludes\");\r\n\t//no good global chunk, but could be uv_pars, heres how to make it work with onbeforecompile\r\n\t//because this is somewhat of a set and forget thing, onBeforeCompile (or onBeforeParse) is \r\n\t//perfectly valid to use here\r\n\t//\"here are some attribute names, whenver you get around to assemblying the shader on WebGL level use them\"\r\n\t//A uniform (over an attribute) would be better if it were available in this scope\r\n\t\r\n\tvar attributeInjection = `\r\n\t\tattribute vec3 instanceOffset; \r\n\t\tattribute float instanceScale;\r\n\t`\r\n\r\n\tmaterial.onBeforeCompile = shader => {\r\n\t\tshader.vertexShader = `\r\n\t\t${attributeInjection}\r\n\t\t${shader.vertexShader}\r\n\t\t`\r\n\t}\r\n\r\n\t//alternatively one can use `uv_pars_vertex`\r\n\t//since displacement map is used in almost all of the shaders, this chunk is present \r\n\t//depth for example, has this chunk, so whatever attribute is added to StandardMaterial\r\n\t//is also going to be added to DepthMaterial\r\n\t/*shaderIncludes = {\r\n\t\tuv_pars_vertex: `\r\n\t\t${attributeInjection}\r\n\t\t${THREE.ShaderChunk.uv_pars_vertex}\r\n\t\t`\r\n\t}*/\r\n\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction((data)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSimpleInstanceExtended = true\r\n\t})\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n\r\nfunction SerializationManager(){\r\n\tthis.processFunctions = []\r\n\tthis.afterFunctions = []\r\n}\r\n\r\nSerializationManager.prototype = {\r\n\taddFunction: function( func ){\r\n\t\tthis.processFunctions.push(func)\r\n\t},\r\n\tserialize(data, meta){\r\n\t\tthis.processFunctions.forEach(f=>f(data))\r\n\t\treturn data\r\n\t},\r\n\tafterSerialize(data){\r\n\t\tthis.afterFunctions.forEach(f=>f(data))\r\n\t},\r\n\taddAfterFunction: function( func ){\r\n\t\tthis.afterFunctions.push(func)\r\n\t}\r\n}\r\n","// some utils\r\n\r\nimport * as THREE from \"three\";\r\n\r\nfunction addOrMergeProp( material, propName, data ) {\r\n\r\n\tif ( material[ propName ] ) {\r\n\r\n\t\tObject.assign( material[ propName ], data );\r\n\r\n\t} else {\r\n\r\n\t\tmaterial[ propName ] = data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//serialize\r\nfunction toJSON(){\r\n\tvar res = THREE.Material.prototype.toJSON.call(\r\n\t\tthis, \r\n\t\tundefined, \r\n\t\tthis._serializationManager.serialize.bind(this._serializationManager)\r\n\t)\r\n\tthis._serializationManager.afterSerialize.call(this._serializationManager,res)\r\n\treturn res\r\n}\r\n\r\n// from three's texture transform api, to be applied to a uniform matrix\r\nfunction setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\tvar c = Math.cos( rotation );\r\n\tvar s = Math.sin( rotation );\r\n\r\n\tthis.set(\r\n\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t0, 0, 0\r\n\t);\r\n\r\n}\r\n\r\n//spec gloss stuff ---------------------------------------------------------\r\n\r\n//this extends the shader to use specular gloss PBR model instead of rough/metal\r\n\r\nvar specularMapFragmentChunk = [\r\n\t'vec3 specularFactor = specular;',\r\n\t'#ifdef USE_SPECULARMAP',\r\n\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t'#endif',\r\n\t// 'gl_FragColor = vec4(vec3(specularFactor),1.);',\r\n\t// 'return;',\r\n].join( '\\n' );\r\n\r\nvar glossinessMapFragmentChunk = [\r\n\t'float glossinessFactor = glossiness;',\r\n\t'#ifdef USE_GLOSSINESSMAP',\r\n\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t// 'gl_FragColor = vec4(vec3(glossinessFactor),1.);',\r\n\t// 'return;',\r\n\t'#endif',\r\n].join( '\\n' );\r\n\r\nvar lightPhysicalFragmentChunk = [\r\n\t'PhysicalMaterial material;',\r\n\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t'material.specularColor = specularFactor.rgb;',\r\n].join( '\\n' );\r\n\r\nvar SHADER_INCLUDES_SPEC_GLOSS = {\r\n\troughnessmap_fragment: specularMapFragmentChunk,\r\n\tmetalnessmap_fragment: glossinessMapFragmentChunk,\r\n\tlights_physical_fragment: lightPhysicalFragmentChunk,\r\n};\r\n\r\nexport default function decorateMaterialWithSpecGloss( material ) {\r\n\r\n\tif ( material.isSpecGlossExtended ) return material;\r\n\r\n\tmaterial.isSpecGlossExtended = true;\r\n\r\n\t// these are the extra uniforms, but instead of being stored in .userData, or some such place\r\n\t// a designated prop could be used\r\n\tvar shaderUniforms = {\r\n\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ), type: 'vec3', stage: 'fragment' }, //fragment can be ommitted (defaults to it) but for sake of clarity\r\n\t\tglossiness: { value: 1, type: 'float', stage: 'fragment' },\r\n\t\tglossinessMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t\tspecularMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t};\r\n\r\n\tvar shaderIncludes = Object.assign({},SHADER_INCLUDES_SPEC_GLOSS)\r\n\r\n\tvar defines = {USE_GLOSSINESSMAP: ''}\r\n\r\n\t//conflicts could be resolved here\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\taddOrMergeProp( material, 'defines', defines );\r\n\r\n\tdelete material.metalnessMap\r\n\tdelete material.roughnessMap\r\n\r\n\t//expose uniforms as props for a cleaner interface (but shaderUniforms is also available so this can be omitted)\r\n\t//it just leads to a cleaner more familiar interface (PhongMaterial has specularMap, so this now has it too)\r\n\tfor ( let propName in shaderUniforms ) {\r\n\r\n\t\tObject.defineProperty( material, propName, {\r\n\t\t\tget: ()=> shaderUniforms[ propName ].value,\r\n\t\t\tset: ( v )=> (shaderUniforms[ propName ].value = v),\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\tvar f = function(data,meta){\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSpecGlossExtended = true\r\n\t\tdata.glossiness = this.glossiness\r\n\t\tdata.specular = this.specular.getHex()\r\n\t\tif(this.glossinessMap && this.glossinessMap.isTexture) data.glossinessMap = this.glossinessMap.toJSON( meta ).uuid \r\n\t}.bind(material)\r\n\r\n\tmaterial._serializationManager.addFunction(f)\r\n\t\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n// multi uv stuff ---------------------------------------------------------\r\n\r\n// this moves the transform from textures to the material, textures become just data\r\n\r\n//list of maps to be extended, these are easy\r\nvar DEFAULT_MAP_LIST = [\r\n\t'alphaMap',\r\n\t'specularMap',\r\n\t'map',\r\n\t'emissiveMap',\r\n\t'metalnessMap',\r\n\t'roughnessMap',\r\n\t'glossinessMap' //this one is from the other example, but if its there it should work, this can be solved to work together somehow\r\n];\r\n\r\n//this can be programatic\r\n//it tells the extension where to look for certain maps\r\n//these follow the /texture2D( $mapname, vUv )/ pattern\r\n//normal map is a bit more complex and would require a non programatic chunk \r\nvar PROP_TO_CHUNK_MAP = {\r\n\t'alphaMap': 'alphamap_fragment',\r\n\t'specularMap': 'specularmap_fragment',\r\n\t'map': 'map_fragment',\r\n\t'emissiveMap': 'emissivemap_fragment',\r\n\t'metalnessMap': 'metalnessmap_fragment',\r\n\t'roughnessMap': 'roughnessmap_fragment',\r\n\t'glossinessMap': 'metalnessmap_fragment', //this one cant be programatic because it belongs to another override, could be a specific check somewhere else\r\n\t'specularMapGloss': 'roughnessmap_fragment',\r\n};\r\n\r\n//some utils\r\n\r\nvar mapRegex = /texture2D\\( (.*Map|map), vUv \\)/gm //look for the pattern /texture2D( $someMap, vUv )/\r\n\r\n//because the other extension changes roughnessMap to specularMap we need the $1 to replace the name, otherwise it could be `mapName`\r\nfunction getReplaceString(mapName){\r\n\treturn `texture2D( $1, ( ${getUniformNameFromProp(mapName)} * vec3( vUv, 1. ) ).xy )`\r\n}\r\n\r\n//in order to keep the uniform name obvious that it belongs to the GLSL context, and to make it as private sounding as possible\r\nfunction getUniformNameFromProp(prop){\r\n\treturn `u_${prop}Transform`\r\n}\r\n\r\n//a utility to add the necessary transform properties to a material based on an arbitrary map name\r\n//so if specularMap is provided it will create these Vector2, a float, and an updateMatrix method\r\n//this is very similar to the Texture transform interface the only difference being that the props are prefixed\r\n//myTexture.repeat vs myMaterial.specularMapRepeat \r\nfunction addMapTransformPropsToMaterial( material, mapName ){\r\n\r\n\tlet _mapName = mapName\r\n\tmaterial[`${mapName}Repeat`] = new THREE.Vector2(1,1)\r\n\tmaterial[`${mapName}Offset`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Center`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Rotation`] = 0\r\n\tmaterial[`${mapName}UpdateMatrix`] = function(){\r\n\t\tthis.shaderUniforms[getUniformNameFromProp(_mapName)].value\r\n\t\t.setUvTransform(\r\n\t\t\tthis[`${_mapName}Offset`].x,\r\n\t\t\tthis[`${_mapName}Offset`].y, \r\n\t\t\tthis[`${_mapName}Repeat`].x,\r\n\t\t\tthis[`${_mapName}Repeat`].y, \r\n\t\t\tthis[`${_mapName}Rotation`], \r\n\t\t\tthis[`${_mapName}Center`].x,\r\n\t\t\tthis[`${_mapName}Center`].y, \r\n\t\t)\r\n\t}.bind(material)\r\n}\r\n\r\n\r\nexport function decorateMaterialWithPerMapTransforms( material, mapList ) {\r\n\tconsole.log(\"default\");\r\n\tif ( material.isPerMapTransformExtended ) return material;\r\n\r\n\tmaterial.isPerMapTransformExtended = true;\r\n\r\n\t//one can provide a subset from outside\r\n\tmapList = mapList || DEFAULT_MAP_LIST;\r\n\r\n\tvar shaderUniforms = {}\r\n\tvar shaderIncludes = {}\r\n\tvar serialize = []\r\n\r\n\tfor ( var i = 0; i < mapList.length; i ++ ) {\r\n\r\n\t\tvar mapName = mapList[ i ];\r\n\r\n\r\n\t\tif ( material[ mapName ] !== undefined ) {\r\n\r\n\t\t\taddMapTransformPropsToMaterial(material, mapName)\r\n\r\n\t\t\tvar uniform = { value: new THREE.Matrix3(), type:'mat3', stage: 'fragment' };\r\n\t\t\tuniform.value.setUvTransform = setUvTransform.bind( uniform.value );\r\n\r\n\t\t\tshaderUniforms[getUniformNameFromProp(mapName)] = uniform\r\n\r\n\t\t\t//this is for resolving the conflict, its not the most elegant solution but it works\r\n\t\t\t//i believe that this would be solved by refactoring the shader templates\r\n\t\t\tvar lookup = mapName\r\n\t\t\tif( material.isSpecGlossExtended && mapName === 'specularMap'){\r\n\t\t\t\tlookup = 'specularMapGloss' \r\n\t\t\t}\r\n\t\t\tserialize.push(mapName)\r\n\r\n\t\t\t//based on the map name ie. specularMap or even an extended glossinessMap pick a chunk\r\n\t\t\tvar chunkName = PROP_TO_CHUNK_MAP[lookup]\r\n\r\n\t\t\t//if there already is a chunk from some extension, pick that, otherwise copy the default chunk\r\n\t\t\tvar shaderChunk = (material.shaderIncludes && material.shaderIncludes[chunkName]) || THREE.ShaderChunk[chunkName]\r\n\r\n\t\t\t//apply the string transformation, this contains the copy of whatever chunk was provided (default or custom)\r\n\t\t\tshaderChunk = shaderChunk.replace( mapRegex , getReplaceString(mapName) )\r\n\r\n\t\t\t//provide this copy as the include chunk, this shader wont look up THREE.ShaderChunk \r\n\t\t\t//and doesnt have to wait for onBeforeCompile to do the transformation\r\n\t\t\t//final transformed chunk is already stored here in this context sync\r\n\t\t\tshaderIncludes[ chunkName ] = shaderChunk\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//combine with other chunks\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction(((data,meta)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isPerMapTransformExtended = true\r\n\r\n\t\tserialize.forEach(mapName=>{\r\n\t\t\tdata[`${mapName}Repeat`] = material[`${mapName}Repeat`].toArray()\r\n\t\t\tdata[`${mapName}Offset`] = material[`${mapName}Offset`].toArray()\r\n\t\t\tdata[`${mapName}Center`] = material[`${mapName}Center`].toArray()\r\n\t\t\tdata[`${mapName}Rotation`] = material[`${mapName}Rotation`]\r\n\t\t})\r\n\r\n\t\treturn data\r\n\r\n\t}).bind(material))\r\n\r\n\r\n\tmaterial._serializationManager.addAfterFunction(\r\n\t\tfunction( data ){\r\n\t\t\tdelete data.roughnessMap\r\n\t\t\tdelete data.roughness\r\n\t\t\tdelete data.metalnessMap\r\n\t\t\tdelete data.metalness\t\r\n\t\t}\r\n\t)\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n}\r\n\r\n// simple instance stuff from lambert example  ---------------------------------------------------------\r\n\r\n//this is a stage after begin_vertex, this would be more elegant with hooks and template refactor\r\nvar after_vertex_transform_chunk = `\r\n\ttransformed *= instanceScale; //the value present in transformed is in model space, \r\n\ttransformed = transformed + instanceOffset;\r\n`\r\n\r\nexport function decorateMaterialWithSimpleInstancing( material ) {\r\n\tconsole.log(\"shaderIncludes\");\r\n\tif( material.isSimpleInstanceExtended ) return material\r\n\r\n\tmaterial.isSimpleInstanceExtended = true \r\n\t\r\n\t//make a custom chunk that includes a copy of the default chunk from THREE.ShaderChunk\r\n\t//followed by a custom chunk, that is simply appended to the copy\r\n\tvar shaderIncludes = { \r\n\t\tbegin_vertex:`\r\n\t\t\t${THREE.ShaderChunk.begin_vertex}\r\n\t\t\t${after_vertex_transform_chunk}\r\n\t\t` \r\n\t}\r\n\r\n\tconsole.log(\"shaderIncludes\");\r\n\t//no good global chunk, but could be uv_pars, heres how to make it work with onbeforecompile\r\n\t//because this is somewhat of a set and forget thing, onBeforeCompile (or onBeforeParse) is \r\n\t//perfectly valid to use here\r\n\t//\"here are some attribute names, whenver you get around to assemblying the shader on WebGL level use them\"\r\n\t//A uniform (over an attribute) would be better if it were available in this scope\r\n\t\r\n\tvar attributeInjection = `\r\n\t\tattribute vec3 instanceOffset; \r\n\t\tattribute float instanceScale;\r\n\t`\r\n\r\n\tmaterial.onBeforeCompile = shader => {\r\n\t\tshader.vertexShader = `\r\n\t\t${attributeInjection}\r\n\t\t${shader.vertexShader}\r\n\t\t`\r\n\t}\r\n\r\n\t//alternatively one can use `uv_pars_vertex`\r\n\t//since displacement map is used in almost all of the shaders, this chunk is present \r\n\t//depth for example, has this chunk, so whatever attribute is added to StandardMaterial\r\n\t//is also going to be added to DepthMaterial\r\n\t/*shaderIncludes = {\r\n\t\tuv_pars_vertex: `\r\n\t\t${attributeInjection}\r\n\t\t${THREE.ShaderChunk.uv_pars_vertex}\r\n\t\t`\r\n\t}*/\r\n\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction((data)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSimpleInstanceExtended = true\r\n\t})\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n\r\nfunction SerializationManager(){\r\n\tthis.processFunctions = []\r\n\tthis.afterFunctions = []\r\n}\r\n\r\nSerializationManager.prototype = {\r\n\taddFunction: function( func ){\r\n\t\tthis.processFunctions.push(func)\r\n\t},\r\n\tserialize(data, meta){\r\n\t\tthis.processFunctions.forEach(f=>f(data))\r\n\t\treturn data\r\n\t},\r\n\tafterSerialize(data){\r\n\t\tthis.afterFunctions.forEach(f=>f(data))\r\n\t},\r\n\taddAfterFunction: function( func ){\r\n\t\tthis.afterFunctions.push(func)\r\n\t}\r\n}\r\n","// some utils\r\n\r\nimport * as THREE from \"three\";\r\n\r\nfunction addOrMergeProp( material, propName, data ) {\r\n\r\n\tif ( material[ propName ] ) {\r\n\r\n\t\tObject.assign( material[ propName ], data );\r\n\r\n\t} else {\r\n\r\n\t\tmaterial[ propName ] = data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//serialize\r\nfunction toJSON(){\r\n\tvar res = THREE.Material.prototype.toJSON.call(\r\n\t\tthis, \r\n\t\tundefined, \r\n\t\tthis._serializationManager.serialize.bind(this._serializationManager)\r\n\t)\r\n\tthis._serializationManager.afterSerialize.call(this._serializationManager,res)\r\n\treturn res\r\n}\r\n\r\n// from three's texture transform api, to be applied to a uniform matrix\r\nfunction setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\tvar c = Math.cos( rotation );\r\n\tvar s = Math.sin( rotation );\r\n\r\n\tthis.set(\r\n\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t0, 0, 0\r\n\t);\r\n\r\n}\r\n\r\n//spec gloss stuff ---------------------------------------------------------\r\n\r\n//this extends the shader to use specular gloss PBR model instead of rough/metal\r\n\r\nvar specularMapFragmentChunk = [\r\n\t'vec3 specularFactor = specular;',\r\n\t'#ifdef USE_SPECULARMAP',\r\n\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t'#endif',\r\n\t// 'gl_FragColor = vec4(vec3(specularFactor),1.);',\r\n\t// 'return;',\r\n].join( '\\n' );\r\n\r\nvar glossinessMapFragmentChunk = [\r\n\t'float glossinessFactor = glossiness;',\r\n\t'#ifdef USE_GLOSSINESSMAP',\r\n\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t// 'gl_FragColor = vec4(vec3(glossinessFactor),1.);',\r\n\t// 'return;',\r\n\t'#endif',\r\n].join( '\\n' );\r\n\r\nvar lightPhysicalFragmentChunk = [\r\n\t'PhysicalMaterial material;',\r\n\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t'material.specularColor = specularFactor.rgb;',\r\n].join( '\\n' );\r\n\r\nvar SHADER_INCLUDES_SPEC_GLOSS = {\r\n\troughnessmap_fragment: specularMapFragmentChunk,\r\n\tmetalnessmap_fragment: glossinessMapFragmentChunk,\r\n\tlights_physical_fragment: lightPhysicalFragmentChunk,\r\n};\r\n\r\nexport function decorateMaterialWithSpecGloss( material ) {\r\n\r\n\tif ( material.isSpecGlossExtended ) return material;\r\n\r\n\tmaterial.isSpecGlossExtended = true;\r\n\r\n\t// these are the extra uniforms, but instead of being stored in .userData, or some such place\r\n\t// a designated prop could be used\r\n\tvar shaderUniforms = {\r\n\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ), type: 'vec3', stage: 'fragment' }, //fragment can be ommitted (defaults to it) but for sake of clarity\r\n\t\tglossiness: { value: 1, type: 'float', stage: 'fragment' },\r\n\t\tglossinessMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t\tspecularMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t};\r\n\r\n\tvar shaderIncludes = Object.assign({},SHADER_INCLUDES_SPEC_GLOSS)\r\n\r\n\tvar defines = {USE_GLOSSINESSMAP: ''}\r\n\r\n\t//conflicts could be resolved here\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\taddOrMergeProp( material, 'defines', defines );\r\n\r\n\tdelete material.metalnessMap\r\n\tdelete material.roughnessMap\r\n\r\n\t//expose uniforms as props for a cleaner interface (but shaderUniforms is also available so this can be omitted)\r\n\t//it just leads to a cleaner more familiar interface (PhongMaterial has specularMap, so this now has it too)\r\n\tfor ( let propName in shaderUniforms ) {\r\n\r\n\t\tObject.defineProperty( material, propName, {\r\n\t\t\tget: ()=> shaderUniforms[ propName ].value,\r\n\t\t\tset: ( v )=> (shaderUniforms[ propName ].value = v),\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\tvar f = function(data,meta){\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSpecGlossExtended = true\r\n\t\tdata.glossiness = this.glossiness\r\n\t\tdata.specular = this.specular.getHex()\r\n\t\tif(this.glossinessMap && this.glossinessMap.isTexture) data.glossinessMap = this.glossinessMap.toJSON( meta ).uuid \r\n\t}.bind(material)\r\n\r\n\tmaterial._serializationManager.addFunction(f)\r\n\t\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n// multi uv stuff ---------------------------------------------------------\r\n\r\n// this moves the transform from textures to the material, textures become just data\r\n\r\n//list of maps to be extended, these are easy\r\nvar DEFAULT_MAP_LIST = [\r\n\t'alphaMap',\r\n\t'specularMap',\r\n\t'map',\r\n\t'emissiveMap',\r\n\t'metalnessMap',\r\n\t'roughnessMap',\r\n\t'glossinessMap' //this one is from the other example, but if its there it should work, this can be solved to work together somehow\r\n];\r\n\r\n//this can be programatic\r\n//it tells the extension where to look for certain maps\r\n//these follow the /texture2D( $mapname, vUv )/ pattern\r\n//normal map is a bit more complex and would require a non programatic chunk \r\nvar PROP_TO_CHUNK_MAP = {\r\n\t'alphaMap': 'alphamap_fragment',\r\n\t'specularMap': 'specularmap_fragment',\r\n\t'map': 'map_fragment',\r\n\t'emissiveMap': 'emissivemap_fragment',\r\n\t'metalnessMap': 'metalnessmap_fragment',\r\n\t'roughnessMap': 'roughnessmap_fragment',\r\n\t'glossinessMap': 'metalnessmap_fragment', //this one cant be programatic because it belongs to another override, could be a specific check somewhere else\r\n\t'specularMapGloss': 'roughnessmap_fragment',\r\n};\r\n\r\n//some utils\r\n\r\nvar mapRegex = /texture2D\\( (.*Map|map), vUv \\)/gm //look for the pattern /texture2D( $someMap, vUv )/\r\n\r\n//because the other extension changes roughnessMap to specularMap we need the $1 to replace the name, otherwise it could be `mapName`\r\nfunction getReplaceString(mapName){\r\n\treturn `texture2D( $1, ( ${getUniformNameFromProp(mapName)} * vec3( vUv, 1. ) ).xy )`\r\n}\r\n\r\n//in order to keep the uniform name obvious that it belongs to the GLSL context, and to make it as private sounding as possible\r\nfunction getUniformNameFromProp(prop){\r\n\treturn `u_${prop}Transform`\r\n}\r\n\r\n//a utility to add the necessary transform properties to a material based on an arbitrary map name\r\n//so if specularMap is provided it will create these Vector2, a float, and an updateMatrix method\r\n//this is very similar to the Texture transform interface the only difference being that the props are prefixed\r\n//myTexture.repeat vs myMaterial.specularMapRepeat \r\nfunction addMapTransformPropsToMaterial( material, mapName ){\r\n\r\n\tlet _mapName = mapName\r\n\tmaterial[`${mapName}Repeat`] = new THREE.Vector2(1,1)\r\n\tmaterial[`${mapName}Offset`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Center`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Rotation`] = 0\r\n\tmaterial[`${mapName}UpdateMatrix`] = function(){\r\n\t\tthis.shaderUniforms[getUniformNameFromProp(_mapName)].value\r\n\t\t.setUvTransform(\r\n\t\t\tthis[`${_mapName}Offset`].x,\r\n\t\t\tthis[`${_mapName}Offset`].y, \r\n\t\t\tthis[`${_mapName}Repeat`].x,\r\n\t\t\tthis[`${_mapName}Repeat`].y, \r\n\t\t\tthis[`${_mapName}Rotation`], \r\n\t\t\tthis[`${_mapName}Center`].x,\r\n\t\t\tthis[`${_mapName}Center`].y, \r\n\t\t)\r\n\t}.bind(material)\r\n}\r\n\r\n\r\nexport function decorateMaterialWithPerMapTransforms( material, mapList ) {\r\n\r\n\tif ( material.isPerMapTransformExtended ) return material;\r\n\r\n\tmaterial.isPerMapTransformExtended = true;\r\n\r\n\t//one can provide a subset from outside\r\n\tmapList = mapList || DEFAULT_MAP_LIST;\r\n\r\n\tvar shaderUniforms = {}\r\n\tvar shaderIncludes = {}\r\n\tvar serialize = []\r\n\r\n\tfor ( var i = 0; i < mapList.length; i ++ ) {\r\n\r\n\t\tvar mapName = mapList[ i ];\r\n\r\n\r\n\t\tif ( material[ mapName ] !== undefined ) {\r\n\r\n\t\t\taddMapTransformPropsToMaterial(material, mapName)\r\n\r\n\t\t\tvar uniform = { value: new THREE.Matrix3(), type:'mat3', stage: 'fragment' };\r\n\t\t\tuniform.value.setUvTransform = setUvTransform.bind( uniform.value );\r\n\r\n\t\t\tshaderUniforms[getUniformNameFromProp(mapName)] = uniform\r\n\r\n\t\t\t//this is for resolving the conflict, its not the most elegant solution but it works\r\n\t\t\t//i believe that this would be solved by refactoring the shader templates\r\n\t\t\tvar lookup = mapName\r\n\t\t\tif( material.isSpecGlossExtended && mapName === 'specularMap'){\r\n\t\t\t\tlookup = 'specularMapGloss' \r\n\t\t\t}\r\n\t\t\tserialize.push(mapName)\r\n\r\n\t\t\t//based on the map name ie. specularMap or even an extended glossinessMap pick a chunk\r\n\t\t\tvar chunkName = PROP_TO_CHUNK_MAP[lookup]\r\n\r\n\t\t\t//if there already is a chunk from some extension, pick that, otherwise copy the default chunk\r\n\t\t\tvar shaderChunk = (material.shaderIncludes && material.shaderIncludes[chunkName]) || THREE.ShaderChunk[chunkName]\r\n\r\n\t\t\t//apply the string transformation, this contains the copy of whatever chunk was provided (default or custom)\r\n\t\t\tshaderChunk = shaderChunk.replace( mapRegex , getReplaceString(mapName) )\r\n\r\n\t\t\t//provide this copy as the include chunk, this shader wont look up THREE.ShaderChunk \r\n\t\t\t//and doesnt have to wait for onBeforeCompile to do the transformation\r\n\t\t\t//final transformed chunk is already stored here in this context sync\r\n\t\t\tshaderIncludes[ chunkName ] = shaderChunk\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//combine with other chunks\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction(((data,meta)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isPerMapTransformExtended = true\r\n\r\n\t\tserialize.forEach(mapName=>{\r\n\t\t\tdata[`${mapName}Repeat`] = material[`${mapName}Repeat`].toArray()\r\n\t\t\tdata[`${mapName}Offset`] = material[`${mapName}Offset`].toArray()\r\n\t\t\tdata[`${mapName}Center`] = material[`${mapName}Center`].toArray()\r\n\t\t\tdata[`${mapName}Rotation`] = material[`${mapName}Rotation`]\r\n\t\t})\r\n\r\n\t\treturn data\r\n\r\n\t}).bind(material))\r\n\r\n\r\n\tmaterial._serializationManager.addAfterFunction(\r\n\t\tfunction( data ){\r\n\t\t\tdelete data.roughnessMap\r\n\t\t\tdelete data.roughness\r\n\t\t\tdelete data.metalnessMap\r\n\t\t\tdelete data.metalness\t\r\n\t\t}\r\n\t)\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n}\r\n\r\n// simple instance stuff from lambert example  ---------------------------------------------------------\r\n\r\n//this is a stage after begin_vertex, this would be more elegant with hooks and template refactor\r\nvar after_vertex_transform_chunk = `\r\n\ttransformed *= instanceScale; //the value present in transformed is in model space, \r\n\ttransformed = transformed + instanceOffset;\r\n`\r\n\r\nexport default function decorateMaterialWithSimpleInstancing( material ) {\r\n\r\n\tif( material.isSimpleInstanceExtended ) return material\r\n\r\n\tmaterial.isSimpleInstanceExtended = true \r\n\t\r\n\t//make a custom chunk that includes a copy of the default chunk from THREE.ShaderChunk\r\n\t//followed by a custom chunk, that is simply appended to the copy\r\n\r\n\tvar shaderIncludes = {\r\n\r\n\t\tbegin_vertex:`\r\n\t\t\t${THREE.ShaderChunk.begin_vertex}\r\n\t\t\t${after_vertex_transform_chunk}\r\n\t\t` \r\n\t}\r\n\r\n\t//no good global chunk, but could be uv_pars, heres how to make it work with onbeforecompile\r\n\t//because this is somewhat of a set and forget thing, onBeforeCompile (or onBeforeParse) is \r\n\t//perfectly valid to use here\r\n\t//\"here are some attribute names, whenver you get around to assemblying the shader on WebGL level use them\"\r\n\t//A uniform (over an attribute) would be better if it were available in this scope\r\n\t\r\n\tvar attributeInjection = `\r\n\t\tattribute vec3 instanceOffset; \r\n\t\tattribute float instanceScale;\r\n\t`\r\n\r\n\tmaterial.onBeforeCompile = shader => {\r\n\t\t// console.log(\"vv\",shader.vertexShader);\r\n\t\tshader.uniforms.uTime = material.userData.uTime;\r\n\t\tshader.vertexShader = `\r\n\t\tattribute vec3 instanceOffset;\r\n\t\t\tattribute float instanceScale;\r\n\t\t\t#include <common>\r\n\t\t\t#include <uv_pars_vertex>\r\n\t\t\tattribute float aIndex;\r\n\t\t\t#include <displacementmap_pars_vertex>\r\n\t\t\t#include <morphtarget_pars_vertex>\r\n\t\t\t#include <skinning_pars_vertex>\r\n\t\t\t#include <logdepthbuf_pars_vertex>\r\n\t\t\t#include <clipping_planes_pars_vertex>\r\n\t\t\tvarying vec2 vHighPrecisionZW;\r\n\t\t\tuniform float uTime;\r\n\t\t\tvoid main() {\r\n\t\t\t\t#include <uv_vertex>\r\n\t\t\t\t#include <skinbase_vertex>\r\n\t\t\t\t#ifdef USE_DISPLACEMENTMAP\r\n\t\t\t\t\t#include <beginnormal_vertex>\r\n\t\t\t\t\t#include <morphnormal_vertex>\r\n\t\t\t\t\t#include <skinnormal_vertex>\r\n\t\t\t\t#endif\r\n\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t// instanced\r\n\t\t\t\tfloat _ind = aIndex + uTime;\r\n\t\t\t\ttransformed *= 1. + 0.5 * sin(24.0 * 3.14 * _ind );\r\n\t\t\t\ttransformed = transformed + instanceOffset;\r\n\t\t\t\t#include <morphtarget_vertex>\r\n\t\t\t\t#include <skinning_vertex>\r\n\t\t\t\t#include <displacementmap_vertex>\r\n\t\t\t\t#include <project_vertex>\r\n\t\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t\t#include <clipping_planes_vertex>\r\n\t\t\t\tvHighPrecisionZW = gl_Position.zw;\r\n\t\t\t}\r\n\t\t`\r\n\t}\r\n\r\n\t\t\t// ${attributeInjection}\r\n\t//alternatively one can use `uv_pars_vertex`\r\n\t//since displacement map is used in almost all of the shaders, this chunk is present \r\n\t//depth for example, has this chunk, so whatever attribute is added to StandardMaterial\r\n\t//is also going to be added to DepthMaterial\r\n\t// shaderIncludes = {\r\n\t// \tuv_pars_vertex: `\r\n\t// \t${attributeInjection}\r\n\t// \t${THREE.ShaderChunk.uv_pars_vertex}\r\n\t// \t`\r\n\t// }\r\n\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction((data)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSimpleInstanceExtended = true\r\n\t})\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\nfunction SerializationManager(){\r\n\tthis.processFunctions = []\r\n\tthis.afterFunctions = []\r\n}\r\n\r\nSerializationManager.prototype = {\r\n\taddFunction: function( func ){\r\n\t\tthis.processFunctions.push(func)\r\n\t},\r\n\tserialize(data, meta){\r\n\t\tthis.processFunctions.forEach(f=>f(data))\r\n\t\treturn data\r\n\t},\r\n\tafterSerialize(data){\r\n\t\tthis.afterFunctions.forEach(f=>f(data))\r\n\t},\r\n\taddAfterFunction: function( func ){\r\n\t\tthis.afterFunctions.push(func)\r\n\t}\r\n}\r\n","// some utils\r\n\r\nimport * as THREE from \"three\";\r\n\r\nfunction addOrMergeProp( material, propName, data ) {\r\n\r\n\tif ( material[ propName ] ) {\r\n\r\n\t\tObject.assign( material[ propName ], data );\r\n\r\n\t} else {\r\n\r\n\t\tmaterial[ propName ] = data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//serialize\r\nfunction toJSON(){\r\n\tvar res = THREE.Material.prototype.toJSON.call(\r\n\t\tthis, \r\n\t\tundefined, \r\n\t\tthis._serializationManager.serialize.bind(this._serializationManager)\r\n\t)\r\n\tthis._serializationManager.afterSerialize.call(this._serializationManager,res)\r\n\treturn res\r\n}\r\n\r\n// from three's texture transform api, to be applied to a uniform matrix\r\nfunction setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\tvar c = Math.cos( rotation );\r\n\tvar s = Math.sin( rotation );\r\n\r\n\tthis.set(\r\n\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t0, 0, 0\r\n\t);\r\n\r\n}\r\n\r\n//spec gloss stuff ---------------------------------------------------------\r\n\r\n//this extends the shader to use specular gloss PBR model instead of rough/metal\r\n\r\nvar specularMapFragmentChunk = [\r\n\t'vec3 specularFactor = specular;',\r\n\t'#ifdef USE_SPECULARMAP',\r\n\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t'#endif',\r\n\t// 'gl_FragColor = vec4(vec3(specularFactor),1.);',\r\n\t// 'return;',\r\n].join( '\\n' );\r\n\r\nvar glossinessMapFragmentChunk = [\r\n\t'float glossinessFactor = glossiness;',\r\n\t'#ifdef USE_GLOSSINESSMAP',\r\n\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t// 'gl_FragColor = vec4(vec3(glossinessFactor),1.);',\r\n\t// 'return;',\r\n\t'#endif',\r\n].join( '\\n' );\r\n\r\nvar lightPhysicalFragmentChunk = [\r\n\t'PhysicalMaterial material;',\r\n\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t'material.specularColor = specularFactor.rgb;',\r\n].join( '\\n' );\r\n\r\nvar SHADER_INCLUDES_SPEC_GLOSS = {\r\n\troughnessmap_fragment: specularMapFragmentChunk,\r\n\tmetalnessmap_fragment: glossinessMapFragmentChunk,\r\n\tlights_physical_fragment: lightPhysicalFragmentChunk,\r\n};\r\n\r\nexport function decorateMaterialWithSpecGloss( material ) {\r\n\r\n\tif ( material.isSpecGlossExtended ) return material;\r\n\r\n\tmaterial.isSpecGlossExtended = true;\r\n\r\n\t// these are the extra uniforms, but instead of being stored in .userData, or some such place\r\n\t// a designated prop could be used\r\n\tvar shaderUniforms = {\r\n\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ), type: 'vec3', stage: 'fragment' }, //fragment can be ommitted (defaults to it) but for sake of clarity\r\n\t\tglossiness: { value: 1, type: 'float', stage: 'fragment' },\r\n\t\tglossinessMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t\tspecularMap: { value: null, type: 'sampler2D', stage: 'fragment' },\r\n\t};\r\n\r\n\tvar shaderIncludes = Object.assign({},SHADER_INCLUDES_SPEC_GLOSS)\r\n\r\n\tvar defines = {USE_GLOSSINESSMAP: ''}\r\n\r\n\t//conflicts could be resolved here\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\taddOrMergeProp( material, 'defines', defines );\r\n\r\n\tdelete material.metalnessMap\r\n\tdelete material.roughnessMap\r\n\r\n\t//expose uniforms as props for a cleaner interface (but shaderUniforms is also available so this can be omitted)\r\n\t//it just leads to a cleaner more familiar interface (PhongMaterial has specularMap, so this now has it too)\r\n\tfor ( let propName in shaderUniforms ) {\r\n\r\n\t\tObject.defineProperty( material, propName, {\r\n\t\t\tget: ()=> shaderUniforms[ propName ].value,\r\n\t\t\tset: ( v )=> (shaderUniforms[ propName ].value = v),\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\tvar f = function(data,meta){\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSpecGlossExtended = true\r\n\t\tdata.glossiness = this.glossiness\r\n\t\tdata.specular = this.specular.getHex()\r\n\t\tif(this.glossinessMap && this.glossinessMap.isTexture) data.glossinessMap = this.glossinessMap.toJSON( meta ).uuid \r\n\t}.bind(material)\r\n\r\n\tmaterial._serializationManager.addFunction(f)\r\n\t\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n// multi uv stuff ---------------------------------------------------------\r\n\r\n// this moves the transform from textures to the material, textures become just data\r\n\r\n//list of maps to be extended, these are easy\r\nvar DEFAULT_MAP_LIST = [\r\n\t'alphaMap',\r\n\t'specularMap',\r\n\t'map',\r\n\t'emissiveMap',\r\n\t'metalnessMap',\r\n\t'roughnessMap',\r\n\t'glossinessMap' //this one is from the other example, but if its there it should work, this can be solved to work together somehow\r\n];\r\n\r\n//this can be programatic\r\n//it tells the extension where to look for certain maps\r\n//these follow the /texture2D( $mapname, vUv )/ pattern\r\n//normal map is a bit more complex and would require a non programatic chunk \r\nvar PROP_TO_CHUNK_MAP = {\r\n\t'alphaMap': 'alphamap_fragment',\r\n\t'specularMap': 'specularmap_fragment',\r\n\t'map': 'map_fragment',\r\n\t'emissiveMap': 'emissivemap_fragment',\r\n\t'metalnessMap': 'metalnessmap_fragment',\r\n\t'roughnessMap': 'roughnessmap_fragment',\r\n\t'glossinessMap': 'metalnessmap_fragment', //this one cant be programatic because it belongs to another override, could be a specific check somewhere else\r\n\t'specularMapGloss': 'roughnessmap_fragment',\r\n};\r\n\r\n//some utils\r\n\r\nvar mapRegex = /texture2D\\( (.*Map|map), vUv \\)/gm //look for the pattern /texture2D( $someMap, vUv )/\r\n\r\n//because the other extension changes roughnessMap to specularMap we need the $1 to replace the name, otherwise it could be `mapName`\r\nfunction getReplaceString(mapName){\r\n\treturn `texture2D( $1, ( ${getUniformNameFromProp(mapName)} * vec3( vUv, 1. ) ).xy )`\r\n}\r\n\r\n//in order to keep the uniform name obvious that it belongs to the GLSL context, and to make it as private sounding as possible\r\nfunction getUniformNameFromProp(prop){\r\n\treturn `u_${prop}Transform`\r\n}\r\n\r\n//a utility to add the necessary transform properties to a material based on an arbitrary map name\r\n//so if specularMap is provided it will create these Vector2, a float, and an updateMatrix method\r\n//this is very similar to the Texture transform interface the only difference being that the props are prefixed\r\n//myTexture.repeat vs myMaterial.specularMapRepeat \r\nfunction addMapTransformPropsToMaterial( material, mapName ){\r\n\r\n\tlet _mapName = mapName\r\n\tmaterial[`${mapName}Repeat`] = new THREE.Vector2(1,1)\r\n\tmaterial[`${mapName}Offset`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Center`] = new THREE.Vector2()\r\n\tmaterial[`${mapName}Rotation`] = 0\r\n\tmaterial[`${mapName}UpdateMatrix`] = function(){\r\n\t\tthis.shaderUniforms[getUniformNameFromProp(_mapName)].value\r\n\t\t.setUvTransform(\r\n\t\t\tthis[`${_mapName}Offset`].x,\r\n\t\t\tthis[`${_mapName}Offset`].y, \r\n\t\t\tthis[`${_mapName}Repeat`].x,\r\n\t\t\tthis[`${_mapName}Repeat`].y, \r\n\t\t\tthis[`${_mapName}Rotation`], \r\n\t\t\tthis[`${_mapName}Center`].x,\r\n\t\t\tthis[`${_mapName}Center`].y, \r\n\t\t)\r\n\t}.bind(material)\r\n}\r\n\r\n\r\nexport function decorateMaterialWithPerMapTransforms( material, mapList ) {\r\n\r\n\tif ( material.isPerMapTransformExtended ) return material;\r\n\r\n\tmaterial.isPerMapTransformExtended = true;\r\n\r\n\t//one can provide a subset from outside\r\n\tmapList = mapList || DEFAULT_MAP_LIST;\r\n\r\n\tvar shaderUniforms = {}\r\n\tvar shaderIncludes = {}\r\n\tvar serialize = []\r\n\r\n\tfor ( var i = 0; i < mapList.length; i ++ ) {\r\n\r\n\t\tvar mapName = mapList[ i ];\r\n\r\n\r\n\t\tif ( material[ mapName ] !== undefined ) {\r\n\r\n\t\t\taddMapTransformPropsToMaterial(material, mapName)\r\n\r\n\t\t\tvar uniform = { value: new THREE.Matrix3(), type:'mat3', stage: 'fragment' };\r\n\t\t\tuniform.value.setUvTransform = setUvTransform.bind( uniform.value );\r\n\r\n\t\t\tshaderUniforms[getUniformNameFromProp(mapName)] = uniform\r\n\r\n\t\t\t//this is for resolving the conflict, its not the most elegant solution but it works\r\n\t\t\t//i believe that this would be solved by refactoring the shader templates\r\n\t\t\tvar lookup = mapName\r\n\t\t\tif( material.isSpecGlossExtended && mapName === 'specularMap'){\r\n\t\t\t\tlookup = 'specularMapGloss' \r\n\t\t\t}\r\n\t\t\tserialize.push(mapName)\r\n\r\n\t\t\t//based on the map name ie. specularMap or even an extended glossinessMap pick a chunk\r\n\t\t\tvar chunkName = PROP_TO_CHUNK_MAP[lookup]\r\n\r\n\t\t\t//if there already is a chunk from some extension, pick that, otherwise copy the default chunk\r\n\t\t\tvar shaderChunk = (material.shaderIncludes && material.shaderIncludes[chunkName]) || THREE.ShaderChunk[chunkName]\r\n\r\n\t\t\t//apply the string transformation, this contains the copy of whatever chunk was provided (default or custom)\r\n\t\t\tshaderChunk = shaderChunk.replace( mapRegex , getReplaceString(mapName) )\r\n\r\n\t\t\t//provide this copy as the include chunk, this shader wont look up THREE.ShaderChunk \r\n\t\t\t//and doesnt have to wait for onBeforeCompile to do the transformation\r\n\t\t\t//final transformed chunk is already stored here in this context sync\r\n\t\t\tshaderIncludes[ chunkName ] = shaderChunk\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//combine with other chunks\r\n\taddOrMergeProp( material, 'shaderUniforms', shaderUniforms );\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction(((data,meta)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isPerMapTransformExtended = true\r\n\r\n\t\tserialize.forEach(mapName=>{\r\n\t\t\tdata[`${mapName}Repeat`] = material[`${mapName}Repeat`].toArray()\r\n\t\t\tdata[`${mapName}Offset`] = material[`${mapName}Offset`].toArray()\r\n\t\t\tdata[`${mapName}Center`] = material[`${mapName}Center`].toArray()\r\n\t\t\tdata[`${mapName}Rotation`] = material[`${mapName}Rotation`]\r\n\t\t})\r\n\r\n\t\treturn data\r\n\r\n\t}).bind(material))\r\n\r\n\r\n\tmaterial._serializationManager.addAfterFunction(\r\n\t\tfunction( data ){\r\n\t\t\tdelete data.roughnessMap\r\n\t\t\tdelete data.roughness\r\n\t\t\tdelete data.metalnessMap\r\n\t\t\tdelete data.metalness\t\r\n\t\t}\r\n\t)\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n}\r\n\r\n// simple instance stuff from lambert example  ---------------------------------------------------------\r\n\r\n//this is a stage after begin_vertex, this would be more elegant with hooks and template refactor\r\nvar after_vertex_transform_chunk = `\r\n\ttransformed *= instanceScale; //the value present in transformed is in model space, \r\n\ttransformed = transformed + instanceOffset;\r\n`\r\n\r\nexport default function decorateMaterialWithSimpleInstancing2( material ) {\r\n\r\n\tif( material.isSimpleInstanceExtended ) return material\r\n\r\n\tmaterial.isSimpleInstanceExtended = true \r\n\t\r\n\t//make a custom chunk that includes a copy of the default chunk from THREE.ShaderChunk\r\n\t//followed by a custom chunk, that is simply appended to the copy\r\n\r\n\tvar shaderIncludes = {\r\n\r\n\t\tbegin_vertex:`\r\n\t\t\t${THREE.ShaderChunk.begin_vertex}\r\n\t\t\t${after_vertex_transform_chunk}\r\n\t\t` \r\n\t}\r\n\r\n\t//no good global chunk, but could be uv_pars, heres how to make it work with onbeforecompile\r\n\t//because this is somewhat of a set and forget thing, onBeforeCompile (or onBeforeParse) is \r\n\t//perfectly valid to use here\r\n\t//\"here are some attribute names, whenver you get around to assemblying the shader on WebGL level use them\"\r\n\t//A uniform (over an attribute) would be better if it were available in this scope\r\n\t\r\n\tvar attributeInjection = `\r\n\t\tattribute vec3 instanceOffset; \r\n\t\tattribute float instanceScale;\r\n\t`\r\n\r\n\tmaterial.onBeforeCompile = shader => {\r\n\t\t// console.log(material.userData.uScale);\r\n\t\tshader.uniforms.uTime = material.userData.uTime;\r\n\t\tshader.uniforms.uScale = material.userData.uScale;\r\n\t\tshader.vertexShader = `\r\n\t\tattribute vec3 instanceOffset;\r\n\t\t\tattribute float instanceScale;\r\n\r\n\t\t#define STANDARD\r\nvarying vec3 vViewPosition;\r\n#ifndef FLAT_SHADED\r\n\tvarying vec3 vNormal;\r\n\t#ifdef USE_TANGENT\r\n\t\tvarying vec3 vTangent;\r\n\t\tvarying vec3 vBitangent;\r\n\t#endif\r\n#endif\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n// instanced\r\nattribute float aIndex;\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\nuniform float uTime;\r\nuniform float uScale;\r\nvoid main() {\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n#ifndef FLAT_SHADED\r\n\tvNormal = normalize( transformedNormal );\r\n\t#ifdef USE_TANGENT\r\n\t\tvTangent = normalize( transformedTangent );\r\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\r\n\t#endif\r\n#endif\r\n\t#include <begin_vertex>\r\n\r\n\t// instanced\r\n\t\t\t\tfloat _ind = aIndex + uTime;\r\n\t\t\ttransformed *= uScale + .5 * sin(24.0 * 3.14 * _ind )+ cos(2. * 3.14 * _ind );\r\n\t\t\t//transformed *= instanceScale;\r\n\t\t\t\ttransformed = transformed + instanceOffset;\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\tvViewPosition = - mvPosition.xyz;\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n}\r\n\t\t`\r\n\t}\r\n\r\n\t\t\t// ${attributeInjection}\r\n\t//alternatively one can use `uv_pars_vertex`\r\n\t//since displacement map is used in almost all of the shaders, this chunk is present \r\n\t//depth for example, has this chunk, so whatever attribute is added to StandardMaterial\r\n\t//is also going to be added to DepthMaterial\r\n\t// shaderIncludes = {\r\n\t// \tuv_pars_vertex: `\r\n\t// \t${attributeInjection}\r\n\t// \t${THREE.ShaderChunk.uv_pars_vertex}\r\n\t// \t`\r\n\t// }\r\n\r\n\taddOrMergeProp( material, 'shaderIncludes', shaderIncludes );\r\n\r\n\tif(!material._serializationManager) material._serializationManager = new SerializationManager()\r\n\r\n\tmaterial._serializationManager.addFunction((data)=>{\r\n\t\tif( !data.metadata.extensions ) data.metadata.extensions = {}\r\n\t\tdata.metadata.extensions.isSimpleInstanceExtended = true\r\n\t})\r\n\t\r\n\tmaterial.toJSON = toJSON.bind(material)\r\n\r\n\treturn material\r\n\r\n}\r\n\r\n\r\nfunction SerializationManager(){\r\n\tthis.processFunctions = []\r\n\tthis.afterFunctions = []\r\n}\r\n\r\nSerializationManager.prototype = {\r\n\taddFunction: function( func ){\r\n\t\tthis.processFunctions.push(func)\r\n\t},\r\n\tserialize(data, meta){\r\n\t\tthis.processFunctions.forEach(f=>f(data))\r\n\t\treturn data\r\n\t},\r\n\tafterSerialize(data){\r\n\t\tthis.afterFunctions.forEach(f=>f(data))\r\n\t},\r\n\taddAfterFunction: function( func ){\r\n\t\tthis.afterFunctions.push(func)\r\n\t}\r\n}\r\n","import React from 'react'\nimport jsonp from 'jsonp'\n\nexport const Status = {\n\tidle: 'IDLE',\n\tloading: 'LOADING',\n\tsuccess: 'SUCCESS',\t\n\terror: 'ERROR'\n}\n\nfunction toQueryString(params) {\n  return Object.keys(params)\n    .map((key) => key + \"=\" + params[key])\n    .join(\"&\");\n}\n\nexport default function useMailChimp(url) {\n\n  const [status, setStatus] = React.useState(Status.idle);\n  const [error, setError] = React.useState(null);\n  const [value, setValue] = React.useState(null);\n  const subscribe = React.useCallback((data) => {\n    const params = toQueryString(data);\n    const ajaxURL = url.replace(\"/post?\", \"/post-json?\");\n    const newUrl = ajaxURL + \"&\" + params;\n\n    setError(null);\n    setStatus(Status.loading);\n\n    jsonp(newUrl, { param: \"c\" }, (err, data) => {\n      console.log(err);\n      console.log(data.msg);\n      if (err) {\n        setStatus(Status.error);\n        setError(err);\n      } else if (data.result !== \"success\") {\n        setStatus(Status.error);\n        setError(data.msg);\n      } else {\n        setStatus(Status.success);\n        setValue(data.msg);\n      }\n    });\n  });\n\n  return { subscribe, status, error, value };\n}","import React from 'react'\n\nclass Loading extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\n    \n}\n\nexport default Loading","import React from 'react';\nimport { ScreenWidth } from './ScreenWidth';\n\n\nclass Error extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tvar defaultErrorMsg = \"none\"\n\t\tvar noatErrorMsg = \"none\"\n\t\tvar alreadyErrorMsg = \"none\"\n\t\tvar domainErrorMsg = \"none\"\n\t\tvar emptyErrorMsg = \"none\"\n\t\tconsole.log(this.props.name);\n\t\tif (this.props.name == \"default\"){\n\n\t\t\tdefaultErrorMsg = \"inherit\"\n\t\t}else if(this.props.name == \"already\"){\n\t\t\talreadyErrorMsg = \"inherit\"\n\t\t}else if(this.props.name == \"noat\"){\n\t\t\tnoatErrorMsg = \"inherit\"\n\t\t}else if(this.props.name == \"domain\"){\n\t\t\tdomainErrorMsg = \"inherit\"\n\t\t}else if(this.props.name == \"empty\"){\n\t\t\temptyErrorMsg = \"inherit\"\n\t\t}else{\n\t\t\tdefaultErrorMsg = \"inherit\"\n\t\t}\n\t\tthis.state = {\n\t      display:\"inherit\",\n\t      displayForm:\"none\",\n\t      defaultErrorMsg: defaultErrorMsg,\n\t      noatErrorMsg: noatErrorMsg,\n\t      alreadyErrorMsg: alreadyErrorMsg,\n\t      domainErrorMsg: domainErrorMsg,\n\t      emptyErrorMsg:emptyErrorMsg\n\t    };\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\thandleSubmit(e){\n\t    this.setState({display:\"none\",\n\t      displayForm:\"inherit\"})\n\t    this.props.onClickk();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\n\n      \t\t<div className=\"error\" style={{display:this.state.display}}>\n      \t\t\t<div className=\"errorMsg\" style={{display:this.state.defaultErrorMsg}}>\n      \t\t\t<span className=\"errorTitle\">Error!</span><br /><br />\n      \t\t\t에러가 발생했습니다.<br />\n      \t\t\t다시 시도해주세요.<br />\n      \t\t\t<button className=\"inputButton\" onClick={this.handleSubmit}>ok</button>\n      \t\t\t</div>\n      \t\t\t<div className=\"errorMsg\" style={{display:this.state.noatErrorMsg}}>\n      \t\t\t<span className=\"errorTitle\">Error!</span><br /><br />\n      \t\t\t유효한 이메일 주소가 아닙니다.<br />\n      \t\t\t다시 시도해주세요.<br />\n      \t\t\t<button className=\"inputButton\" onClick={this.handleSubmit}>ok</button>\n      \t\t\t</div>\n      \t\t\t<div className=\"errorMsg\" style={{display:this.state.alreadyErrorMsg}}>\n      \t\t\t<span className=\"errorTitle\">Error!</span><br /><br />\n      \t\t\t이미 등록된 주소입니다.<br />\n      \t\t\t<button className=\"inputButton\" onClick={this.handleSubmit}>ok</button>\n      \t\t\t</div>\n      \t\t\t<div className=\"errorMsg\" style={{display:this.state.domainErrorMsg}}>\n      \t\t\t<span className=\"errorTitle\">Error!</span><br /><br />\n      \t\t\t유효한 이메일 주소가 아닙니다.<br />\n      \t\t\t다시 시도해주세요.<br />\n      \t\t\t<button className=\"inputButton\" onClick={this.handleSubmit}>ok</button>\n      \t\t\t</div>\n      \t\t\t<div className=\"errorMsg\" style={{display:this.state.emptyErrorMsg}}>\n      \t\t\t<span className=\"errorTitle\">Error!</span><br /><br />\n      \t\t\t이름과 이메일 주소를 모두 입력해주세요.<br />\n      \t\t\t<button className=\"inputButton\" onClick={this.handleSubmit}>ok</button>\n      \t\t\t</div>\n\t\t\t\t\n\n\t\t\t</div>\n      </div>\n\t\t);\n\t}\n\n    \n}\n\nexport default Error","import React from 'react'\nimport { ScreenWidth } from './ScreenWidth';\n\n\nclass Success extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\n\t\tthis.state = {\n\t      display:\"inherit\",\n\t      displayForm:\"none\"\n\t    };\n\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\thandleSubmit(e){\n\t    this.setState({display:\"none\",\n\t      displayForm:\"inherit\"});\n\t    this.props.onClickk();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t<div className=\"error\" style={{display:this.state.display}}>\n      \t\t\t<div className=\"errorMsg\" >\n      \t\t\t<span className=\"errorTitle\">Success</span><br /><br />\n      \t\t\t수강 신청이 완료되었습니다.<br />\n      \t\t\t개강하면 메일로 알려드릴게요.<br />\n      \t\t\t<button className=\"inputButton\" onClick={this.handleSubmit}>ok</button>\n      \t\t\t</div>\n      \t\t\t</div>\n      \t\t\t</div>\n\t\t);\n\t}\n\n    \n}\n\nexport default Success","import { FunctionComponent } from 'react';\nimport { useScreenWidth } from './useScreenWidth';\n\n// type ScreenWidthChildren = (screenWidth) => any;\ntype ScreenWidthChildren = {\n  screenWidth: any,\n  mom: any,\n  son:any\n}\n\ninterface IScreenWidthProps {\n  children: ScreenWidthChildren;\n}\n\nexport const ScreenWidth: FunctionComponent<IScreenWidthProps> = ({\n  children,mom,son\n}) => {\n  const screenWidth = useScreenWidth(mom,son);\n  // console.log(\"hi test\", mom);\n  return children(screenWidth);\n};","import React from 'react';\nimport useMailchimp from './Hooks'\nimport Status from './Hooks'\nimport jsonp from 'jsonp'\n\nimport Loading from './Loading';\nimport Error from './Error';\nimport Success from './Success';\n\nexport function useScreenWidth(thingy,thingy2) {\n  // const SubscribeForm = () => {\n    // console.log(thingy);\n  const [form, setForm] = React.useState({firstName: '', email: ''})\n  const [status2, setStatus2] = React.useState(null);\n  var {subscribe, status, error, value} = useMailchimp('https://gmail.us7.list-manage.com/subscribe/post?u=7247676ecb0306e26c5320a78&amp;id=2a8a1ad9a4')\n\n  const handleInputChange = event => {\n    const target = event.target\n    const name = target.name\n    const value = target.value\n    setForm(form => ({\n      ...form,\n      [name]: value,\n    }))\n  }\n  const sendThisToParent = () =>{\n    // console.log(\"hey\", thingy);\n    thingy();\n    thingy2();\n    setStatus2(\"IDLE\");\n  }\n\n\n  const statusChange = () =>{\n    // status = \"IDLE\"\n    thingy2();\n    setStatus2(\"IDLE\");\n  }\n\n  const handleSubmit = () => {\n    // We are performing some simple validation here.\n    // I highly recommend checking a fully-fledged solution\n    // for forms like https://react-hook-form.com/\n    thingy2();\n    setStatus2(null);\n    if (form.email === '') {\n    \t// console.log(\"empty\");\n    \treturn}\n\n    subscribe({\n      FNAME: \"noname\",\n      EMAIL: form.email,\n    })\n  }\n\n  const afterSubmission = event => {\n    event.preventDefault();\n\t}\n\n// if (status === \"LOADING\") {\n//     return <Loading />\n//   }\n    if (status2 === \"IDLE\") {\n    \n  }else if(status === \"LOADING\") {\n    return <Loading />\n  }\n  else if (status === \"ERROR\") {\n  \tif (error != undefined) {\n  \t\tif (error.includes('An email address must contain')) {\n  \t\treturn <Error name=\"noat\" onClickk={statusChange} />\n\n\t  }else if (error.includes('The domain portion of the email address is invalid')) {\n  \t\treturn <Error name=\"domain\" onClickk={statusChange} />\n\t    \n\t  }else if (error.includes('already subscribed')) {\n  \t  \treturn <Error name=\"already\" onClickk={statusChange} />\n\t  }else{\n\t  \treturn <Error name=\"default\" onClickk={statusChange} />\n\t  }\n  \t}else{\n  \t\t\n  \t}\n  }else if (status === \"SUCCESS\") {\n  \treturn <Success onClickk={sendThisToParent} />\n  }\n\n\n  return (\n  \t<div>\n    <form className=\"form\" style={{display:\"inherit\"}} onSubmit = {afterSubmission} autocomplete=\"off\" >\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        placeholder=\"name\"\n        onChange={handleInputChange}\n        className=\"input\"\n        style={{display:\"none\"}}\n      />\n      <br />\n      <input className=\"input\" id=\"email\" name=\"email\" placeholder=\"email\" onChange={handleInputChange} />\n      <br /> \n      <button className=\"inputButton\" onClick={handleSubmit}>Register ⟿</button>\n    </form>\n    </div>\n  )\n// }\n\n}\n\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { DDSLoader } from 'three/examples/jsm/loaders/DDSLoader.js';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport { Curves } from 'three/examples/jsm/curves/CurveExtras.js';\nimport { GUI } from 'three/examples/jsm/libs/dat.gui.module.js';\nimport { SubdivisionModifier } from 'three/examples/jsm/modifiers/SubdivisionModifier.js';\nimport { Detector } from 'three/examples/jsm/WebGL.js';\nimport decorateMaterialWithPerMapTransforms from '../js/SpecGlossMultiUVInstanceExample.js';\nimport decorateMaterialWithSpecGloss from '../js/SpecGlossMultiUVInstanceExample3.js';\nimport decorateMaterialWithSimpleInstancing from '../js/SpecGlossMultiUVInstanceExample2.js';\nimport decorateMaterialWithSimpleInstancing2 from '../js/SpecGlossMultiUVInstanceExample4.js';\nimport { NURBSCurve } from 'three/examples/jsm/curves/NURBSCurve.js';\nimport { Interaction } from 'three.interaction';\nimport { ScreenWidth } from './ScreenWidth';\nimport Draggable from 'react-draggable';\n\nimport * as Nodes from 'three/examples/jsm/nodes/Nodes.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nimport {\n  isBrowser,\n  isMobile\n} from \"react-device-detect\";\n\n\nvar INSTANCES = 128;\nvar frequency = 32;\nvar gltfScale = 1500;\nvar firstTime = true;\n\nconst style = {\n  // height: 5400 // we can control scene size by setting container dimensions\n};\n\nconst projectTitles =[\"spermtank\",\"naheerun\",\"ospapax\",\"oogenesis\",\"what\",\"cybersecurity\",\"naheerun\"];\nconst projectTitles2 =[\"would u b my sperm tank?\",\"ꪀꪖꫝꫀꫀ.ꪖρρ 𝕣ꪊꪀ ᦔꪖᦔᦔꪗ.ꪖρρ\",\"ospapax\",\"oo-genesis\",\"꧁☬what is daddy residency?☬꧂\",\"cybersecurity4uterus\",\"ꪀꪖꫝꫀꫀ.ꪖρρ 𝕣ꪊꪀ ᦔꪖᦔᦔꪗ.ꪖρρ\"];\nconst projectLinks =\n[\"https://www.youtube.com/embed/IDKXWiDn3ZU\",\n\"https://www.youtube.com/embed/3aWj_jF-htA\",\n\"https://www.youtube.com/embed/L2EGFM_asxo\",\n\"https://www.youtube.com/embed/IJ23D1M_Hp8\",\n\"https://www.youtube.com/embed/efzO_lpcyY4\",\n\"https://www.youtube.com/embed/-d-agXX5Z1I\",\n\"https://www.youtube.com/embed/3aWj_jF-htA\"];\n\nvar container, stats;\nvar camera, scene, renderer;\nvar tableShow = false;\nvar creditShow = false;\nvar marqueeHovered = false;\nvar marqueeHovered2 = false;\nvar focusCounter = 0;\nvar randDic = [\"⟡\",\"⟢\",\"⟣\",\"+\",\"*\",\"×\"];\nvar arrowSymbols = \"\";\n// var mobOrDesk = false;\n\nclass PlacentaNo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar wWidth = window.innerWidth + \"px\";\n\t\tvar wHeight = window.innerHeight + \"px\";\n\t\tvar tableHeight = window.innerHeight - 150;\n\t\tconsole.log(tableHeight+\"px\");\n\t\tvar marqueeDisplay = \"none\";\n\t\tif (window.innerWidth>1200){\n\t\t\tmarqueeDisplay = \"inherit\"\n\t\t}\n\t\tvar modalTop = \"0px\";\n\t    var modalLeft = \"0px\";\n\t    var petitDisplay =\"none\";\n\t    var titleWidth = wHeight;\n\t    var titleHeight = wHeight;\n\t    var titlePointerEvents = \"none\";\n\t    var titleImageWidth = window.innerHeight;\n\t    var titleImageDisplay = \"none\";\n\t    var showTableRow = \"table-row\";\n\t    var seTop = \"\";\n\t    var secondRnd = \"⟡\";\n\t    var thirdRnd = \"⟡\";\n\t    var fourthRnd = \"⟡\";\n\t    \n\t    if (isMobile){\n\t    \tmodalTop = (window.innerHeight -window.innerWidth)*0.5 + \"px\";\n\t    \tmodalLeft = \"0px\";\n\t    \tpetitDisplay = \"inherit\";\n\t    \ttitleWidth = wWidth;\n\t    \ttitleHeight = wWidth;\n\t    \ttitlePointerEvents = \"inherit\";\n\t    \ttitleImageWidth = window.innerWidth;\n\t    \ttitleImageDisplay = \"inherit\";\n\t    \tif (window.innerWidth < 420) {\n\t    \t\tshowTableRow = \"none\";\n\t    \t\tseTop=\"90px\"\n\t    \t}\n\t    }\n\t    \n\n\t    \n\t    this.state = {\n\t      display:\"\",\n\t      uterusImg: \"/textures/mat/cybersecurity_mat.png\",\n\t      projectTitle: \"nahee.app run daddy.app\",\n\t      projectLink:\"https://www.youtube.com/embed/3aWj_jF-htA\",\n\t      wWidth: wWidth,\n\t      wHeight: wHeight,\n\t      logoOpacity:\"\",\n\t      drdLogo:\"\",\n\t      modalTop:modalTop,\n\t      modalLeft:modalLeft,\n\t      petitDisplay:petitDisplay,\n\t      tableHeight: tableHeight +\"px\",\n\t      tableDisplay: \"none\",\n\t      marqueeDisplay: marqueeDisplay,\n\t      formZIndex:30000,\n\t      rowColor:\"transparent\",\n\t      rowTextColor:\"white\",\n\t      rowColor2:\"transparent\",\n\t      rowTextColor2:\"white\",\n\t      rowColor3:\"transparent\",\n\t      rowTextColor3:\"white\",\n\t      rowColor4:\"transparent\",\n\t      rowTextColor4:\"white\",\n\t      marqueeTxt:\"ϕth Daddy Masters Class ⟿ Register\",\n\t      marqueePointer:\"pointer\",\n\t      marqueeHover:\"\",\n\t      marqueeHover2:\"\",\n\t      focus:0,\n\t      titleWidth: titleWidth,\n\t      titleHeight: titleHeight,\n\t      titlePointerEvents: titlePointerEvents,\n\t      titleImageWidth: titleImageWidth,\n\t      titleImageDisplay: titleImageDisplay,\n\t      showTableRow: showTableRow,\n\t      seTop:seTop,\n\t      secondRnd:secondRnd,\n\t      thirdRnd:thirdRnd,\n\t      fourthRnd:fourthRnd,\n\t      creditDisplay:\"none\",\n\t      mymyText:\"⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡⟡\"\n\t    };\n    \n\t}\n  componentDidMount() {\n    this.sceneSetup();\n    var myThis = this;\n    // if(isMobile){\n    // \tthis.updateFocus();\n\t   //  this.interval = setInterval(() => myThis.updateFocus(), 2000);\n    // }\n    \n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    if(isMobile){\n    \tclearInterval(this.interval);\n    }\n    // this.controls.dispose();\n  }\n  updateRnd = () =>{\n  \tvar newSecondRndTxt = \"\";\n  \tvar newThirdRndTxt = \"\";\n  \tvar newFourthRndTxt = \"\";\n  \tvar randInt = Math.floor(Math.random() * Math.floor(6));\n  \tfor (var i = 0; i < randInt+1; i++) {\n  \t\tvar randInt2 = Math.floor(Math.random() * Math.floor(6));\n  \t\tnewSecondRndTxt += randDic[randInt2];\n  \t}\n  \tvar randInt_ = Math.floor(Math.random() * Math.floor(4));\n  \tfor (var i = 0; i < randInt_+1; i++) {\n  \t\tvar randInt3 = Math.floor(Math.random() * Math.floor(6));\n  \t\tnewThirdRndTxt += randDic[randInt3];\n  \t}\n\n\tvar randInt__ = Math.floor(Math.random() * Math.floor(3));\n  \tfor (var i = 0; i < randInt__+1; i++) {\n  \t\tvar randInt4 = Math.floor(Math.random() * Math.floor(6));\n  \t\tnewFourthRndTxt += randDic[randInt4];\n  \t}\n\n  \tthis.setState({\n\t      secondRnd:newSecondRndTxt,\n\t      thirdRnd:newThirdRndTxt,\n\t      fourthRnd:newFourthRndTxt\n\t    });\n    }\n  updateArrow= () => {\n  \tif (arrowSymbols.length<13){\n  \t\tarrowSymbols += \"⊸\";\n  \t\tthis.setState({\n\t      mymyText:arrowSymbols\n\t    });\n  \t}else if (arrowSymbols.length==13){\n  \t\tarrowSymbols = \"⊸\";\n  \t\tthis.setState({\n\t      mymyText:arrowSymbols\n\t    });\n  \t}\n  \t// else if (arrowSymbols.length==12){\n  \t// \tarrowSymbols += \"▽\"\n  \t// \tthis.setState({\n\t  //     mymyText:arrowSymbols\n\t  //   });\n  \t// }\n  \t\n  \t\n  }\n\n  updateFocus= () => {\n  \t// console.log(\"this.state.focus\",this.state.focus);\n\n  \t//  this.setState({ focus: Math.floor(Math.random() * Math.floor(3)) })\n  \t // var randInt = Math.floor(Math.random() * Math.floor(3))\n  \t var counterReminder = focusCounter % 7;\n  \t var tf = false;\n  \t if (counterReminder > 4){\n  \t \ttf = true;\n  \t }\n  \t // if (focusCounter!=0){\n  \t \tthis.focusEvent2(this.meshArr[counterReminder], tf);\n  \t // }\n  \t focusCounter += 1;\n  \t counterReminder = focusCounter % 7;\n  \t if (counterReminder > 4){\n  \t \ttf = true;\n  \t }\n  \t this.focusEvent(this.meshArr[counterReminder], tf, counterReminder);\n  }\n\n\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    var elmnt = document.getElementById(\"marquee\");\n    if (elmnt!= undefined){\n    \tvar tableHeight = height - (elmnt.offsetHeight*2) - 6;\n    var tableTop = elmnt.offsetHeight + 6;\n    this.setState({\n\t      tableHeight: tableHeight + \"px\",\n\t      tableTop: tableTop +\"px\"\n\t    });\n    }\n    \n\t// console.log(\"elmnt.offsetHeight\",elmnt.offsetHeight);\n\n   \t// if (width >= height){\n   \t// \tmobOrDesk = false;\n   \t// }else{\n   \t// \tmobOrDesk = true;\n   \t// }\n\n   \t// if (isMobile){\n   \t// \tmobOrDesk = true;\n   \t// }else if(isBrowser){\n   \t// \tmobOrDesk = false;\n   \t// }\n\n    if (isMobile){\n    \tINSTANCES = 64;\n    \tgltfScale = 1000;\n    }else if(isBrowser){\n    \tINSTANCES = 128;\n    \tgltfScale = 1500;\n    }\n\n    this.scene = new THREE.Scene();\n    //dummy scene\n\tthis.intersectsScene = new THREE.Scene();\n\n\tthis.mouseX = 0;\n\tthis.mouseY = 0;\n\n\tthis.mouse = new THREE.Vector2();\n\n\tthis.targetX = 0;\n\tthis.targetY = 0;\n\n    this.clock = new THREE.Clock();\n\n\tthis.camera = new THREE.PerspectiveCamera( 27, window.innerWidth / window.innerHeight, 1, 10000 );\n\tthis.camera.position.z = 1200;\n\n   \tvar light = new THREE.DirectionalLight( 0xffffff,4 );\n\tlight.position.set( 100, 260, 160 );\n\n\tthis.scene.add(light)\n\n\tvar ambient = new THREE.AmbientLight( 0x222222 );\n\tthis.scene.add( ambient );\n\t\n\n    this.renderer = new THREE.WebGLRenderer();\n    // { alpha: true }\n    // this.renderer.setClearColor( 0x000000, 0 ); \n    this.renderer.physicallyCorrectLights = true;\n    // this.renderer.gammaOutput = true;\n   \tthis.renderer.outputEncoding = THREE.sRGBEncoding;\n    // this.renderer.shadowMap.enabled = true;\n    \n    this.renderer.setPixelRatio( window.devicePixelRatio );\n\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\n\t// container.appendChild( renderer.domElement );\n\tthis.interaction = new Interaction(this.renderer, this.intersectsScene, this.camera);\n\t//renderer.toneMapping = ReinhardToneMapping;\n\n\tthis.stats = new Stats();\n\n\tthis.offsetAttArr = [];\n\tthis.scaleAttArr = [];\n\n\tconst matArraySize = INSTANCES * 4\n\tthis.matrixArray = [\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t]\n\tthis.matrixAttributeArray = [];\n\n\tthis.matrixArray2 = [\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t]\n\tthis.matrixAttributeArray2 = [];\n\n\tthis.matrixArray3 = [\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t]\n\tthis.matrixAttributeArray3 = [];\n\n\tthis.matrixArray4 = [\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t]\n\tthis.matrixAttributeArray4 = [];\n\n\tthis.matrixArray5 = [\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t\tnew Float32Array(matArraySize),\n\t]\n\tthis.matrixAttributeArray5 = [];\n\t\n\t\n\n\tif (isMobile){\n    \tthis.initInstanceAttributesExtended(400,200,200,0,this.matrixArray,this.matrixAttributeArray,this.mesh, 1);\n\t\t// for gltf1\n\t\tthis.initInstanceAttributesExtended(400,120,200,50,this.matrixArray2,this.matrixAttributeArray2,this.mesh2, 2);\n\n\t\tthis.initInstanceAttributesExtended(300,100,320,100,this.matrixArray3,this.matrixAttributeArray3,this.mesh3, 3);\n\t\t// for gltf2\n\t\tthis.initInstanceAttributesExtended(400,120,50,120,this.matrixArray4,this.matrixAttributeArray4,this.mesh4, 4);\n    }else if(isBrowser){\n    \tthis.initInstanceAttributesExtended(300,150,150,0,this.matrixArray,this.matrixAttributeArray,this.mesh, 1);\n\t\t// for gltf1\n\t\tthis.initInstanceAttributesExtended(500,100,300,300,this.matrixArray2,this.matrixAttributeArray2,this.mesh2, 2);\n\n\t\tthis.initInstanceAttributesExtended(600,200,200,200,this.matrixArray3,this.matrixAttributeArray3,this.mesh3, 3);\n\t\t// for gltf2\n\t\tthis.initInstanceAttributesExtended(500,0,250,150,this.matrixArray4,this.matrixAttributeArray4,this.mesh4, 4);\n    }\n\n\tthis.initTexture();\n\tthis.initBall();\n\n\t// this.onChangeGuiMaterial(this.material);\n\tthis.loadGLTF();\n\tthis.loadGLTF2();\n\tthis.startAnimationLoop();\n\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n    document.addEventListener( 'mousemove', this.onDocumentMouseMove, false );\n  };\n\n  loadGLTF = () => {\n\n  \tvar myThis = this;\n\n\tthis.loader = new GLTFLoader();\n\tconst dracoLoader = new DRACOLoader();\n\tdracoLoader.setDecoderPath( 'three/examples/js/libs/draco/gltf/' );\n\tthis.loader.setDRACOLoader(dracoLoader );\n\tconst ddsLoader = new DDSLoader();\n\tthis.loader.setDDSLoader(ddsLoader );\n\n\tvar loadStartTime = performance.now();\n\tthis.loader.load( 'textures/BoomBoxLight.gltf', function( data ) {\n\n\t\tmyThis.gltf = data;\n\n\t\tvar object = myThis.gltf.scene;\n\n\t\tconsole.info( 'Load time: ' + ( performance.now() - loadStartTime ).toFixed( 2 ) + ' ms.' );\n\n\t\tobject.traverse( function( node ) {\n\n\t\t\tif ( node.material && ( node.material.isMeshStandardMaterial ||\n\t\t\t\t ( node.material.isShaderMaterial && node.material.envMap !== undefined ) ) ) {\n\n\t\t\t\tnode.material.envMap = myThis.envMap;\n\t\t\t\tnode.material.needsUpdate = true;\n\t\t\t}\n\n\t\t} );\n\n\t\tobject.traverse( function ( node ) {\n\n\t\t\t// if ( node.isMesh || node.isLight ) node.castShadow = true;\n\n\t\t} );\n\t\tobject.rotation.y -= Math.PI;\n\t\tmyThis.scene.add( object );\n\t\t\n\n\t\tvar scale = gltfScale;\n\t\tmyThis.meshGLTF = object.children[0]\n\t\tmyThis.meshGLTF.frustumCulled = false\n\t\t// myThis.meshGLTF.visible = guiData.currentMesh === 'gltf'\n\t\tmyThis.meshGLTF.geometry.scale(scale,scale,scale)\n\n\t\tmyThis.materialGLTF = myThis.meshGLTF.material\n\t\tdecorateMaterialWithPerMapTransforms(myThis.materialGLTF)\n\t\t// myThis.applyInstancingToMesh2(myThis.meshGLTF)\n\t\tmyThis.applyInstancingToMeshExtended(myThis.meshGLTF,2)\n\t\tmyThis.meshArr[5] = myThis.meshGLTF;\n\t\t// myThis.meshArr[5].visible = false;\n\n\t\t// myThis.applyIndecisToInstancedMesh(myThis.meshGLTF)\n\n\t}, undefined, function ( error ) {\n\n\t\tconsole.error( error );\n\n\t} );\n\n}\n\n  loadGLTF2 = () => {\n\n  \tvar myThis = this;\n\n\tthis.loader = new GLTFLoader();\n\tconst dracoLoader = new DRACOLoader();\n\tdracoLoader.setDecoderPath( 'three/examples/js/libs/draco/gltf/' );\n\tthis.loader.setDRACOLoader(dracoLoader );\n\tconst ddsLoader = new DDSLoader();\n\tthis.loader.setDDSLoader(ddsLoader );\n\n\tvar loadStartTime = performance.now();\n\tthis.loader.load( 'textures/hey/BoomBoxLight.gltf', function( data ) {\n\n\t\tmyThis.gltf2 = data;\n\n\t\tvar object = myThis.gltf2.scene;\n\n\t\tconsole.info( 'Load time: ' + ( performance.now() - loadStartTime ).toFixed( 2 ) + ' ms.' );\n\n\t\tobject.traverse( function( node ) {\n\n\t\t\tif ( node.material && ( node.material.isMeshStandardMaterial ||\n\t\t\t\t ( node.material.isShaderMaterial && node.material.envMap !== undefined ) ) ) {\n\n\t\t\t\tnode.material.envMap = myThis.envMap;\n\t\t\t\tnode.material.needsUpdate = true;\n\t\t\t}\n\n\t\t} );\n\n\t\t\n\t\tobject.rotation.y -= Math.PI;\n\t\tmyThis.scene.add( object );\n\t\t// object.position.x = 500;\n\n\t\tvar scale = gltfScale;\n\t\tmyThis.meshGLTF2 = object.children[0]\n\t\tmyThis.meshGLTF2.frustumCulled = false\n\t\tmyThis.meshGLTF2.geometry.scale(scale,scale,scale)\n\n\t\tmyThis.meshArr[6] = myThis.meshGLTF2;\n\t\t// myThis.meshArr[6].visible = false;\n\t\tmyThis.materialGLTF2 = myThis.meshGLTF2.material\n\t\tdecorateMaterialWithPerMapTransforms(myThis.materialGLTF2)\n\t\tmyThis.applyInstancingToMeshExtended(myThis.meshGLTF2, 4)\n\n\t\tmyThis.setState({\n\t      logoOpacity:\"logoAnimation\",\n\t      drdLogo:\"drdLogoAnimation\"\n\t    });\n\t    myThis.interval = setInterval(() => myThis.updateRnd(), 200);\n\t\t// myThis.applyInstancingToMesh4(myThis.meshGLTF2)\n\t\t// myThis.applyIndecisToInstancedMesh(myThis.meshGLTF)\n\n\t}, undefined, function ( error ) {\n\n\t\tconsole.error( error );\n\n\t} );\n\n}\n\n\tinitTexture = () => {\n\n\t\tvar myThis = this;\n\n\t\tthis.texture = new THREE.TextureLoader().load( 'textures/mat/naheerun_mat.png' )\n\t\tthis.texture.wrapS = this.texture.wrapT = THREE.RepeatWrapping\n\t\tthis.texture.name = \"texture\"\n\n\t\tthis.texture3 = new THREE.TextureLoader().load( 'textures/mat/ospapax_mat.png' )\n\t\tthis.texture3.wrapS = this.texture3.wrapT = THREE.RepeatWrapping\n\t\tthis.texture3.name = \"texture3\"\n\n\t\tthis.texture4 = new THREE.TextureLoader().load( 'textures/mat/oogenesis_mat.png' )\n\t\tthis.texture4.wrapS = this.texture4.wrapT = THREE.RepeatWrapping\n\t\tthis.texture4.name = \"texture4\"\n\n\t\tthis.texture5 = new THREE.TextureLoader().load( 'textures/mat/what_mat.png' )\n\t\tthis.texture5.wrapS = this.texture5.wrapT = THREE.RepeatWrapping\n\t\tthis.texture5.name = \"texture5\"\n\n\t\tthis.texture6 = new THREE.TextureLoader().load( 'textures/mat/spermtank_mat.png' )\n\t\tthis.texture6.wrapS = this.texture6.wrapT = THREE.RepeatWrapping\n\t\tthis.texture6.name = \"texture6\"\n\n\t\tthis.envMap = new THREE.TextureLoader().load( 'textures/pp_new_2.jpg', function ( texture ) {\n\n\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\ttexture.encoding = THREE.sRGBEncoding;\n\t\t\tif ( myThis.mesh ) myThis.material.needsUpdate = true;\n\t\t\tif ( myThis.meshGLTF ) myThis.materialGLTF.needsUpdate = true;\n\t\t\tif ( myThis.meshGLTF2 ) myThis.materialGLTF2.needsUpdate = true;\n\n\t\t} );\n\n\t\tthis.envMap.name = \"envMap\"\n\t}\n\n\tinitBall = () => {\n\n\t\tthis.material = decorateMaterialWithSpecGloss(\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\t// color: 0xff0000,\n\t\t\t\t// color: 0x222222,\n\t\t\t\tenvMap: this.envMap,\n\t\t\t\tmap: this.texture6,\n\t\t\t})\n\t\t)\n\t\tthis.material2 = decorateMaterialWithSpecGloss(\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\t// color: 0x00ff00,\n\t\t\t\t// color: 0x222222,\n\t\t\t\tenvMap: this.envMap,\n\t\t\t\tmap: this.texture,\n\t\t\t})\n\t\t)\n\t\tthis.material3 = decorateMaterialWithSpecGloss(\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\t// color: 0x0000ff,\n\t\t\t\t// color: 0x222222,\n\t\t\t\tenvMap: this.envMap,\n\t\t\t\tmap: this.texture3,\n\t\t\t})\n\t\t)\n\t\tthis.material4 = decorateMaterialWithSpecGloss(\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\t// color: 0xffff00,\n\t\t\t\t// color: 0x222222,\n\t\t\t\tenvMap: this.envMap,\n\t\t\t\tmap: this.texture4,\n\t\t\t})\n\t\t)\n\t\tthis.material5 = decorateMaterialWithSpecGloss(\n\t\t\tnew THREE.MeshStandardMaterial({\n\t\t\t\t// color: 0xff00ff,\n\t\t\t\t// color: 0x222222,\n\t\t\t\tenvMap: this.envMap,\n\t\t\t\tmap: this.texture5,\n\t\t\t})\n\t\t)\n\n\t\tdecorateMaterialWithPerMapTransforms(this.material)\n\n\n\t\tthis.mesh = new THREE.Mesh(new THREE.SphereBufferGeometry(8), this.material)\n\t\tthis.mesh2 = new THREE.Mesh(new THREE.SphereBufferGeometry(8), this.material2)\n\t\tthis.mesh3 = new THREE.Mesh(new THREE.SphereBufferGeometry(8), this.material3)\n\t\tthis.mesh4 = new THREE.Mesh(new THREE.SphereBufferGeometry(8), this.material4)\n\t\tthis.mesh5 = new THREE.Mesh(new THREE.SphereBufferGeometry(8), this.material5)\n\t\t// this.mesh.visible = false;\n\t\t// this.mesh2.visible = false;\n\t\t// this.mesh3.visible = false;\n\t\t// this.mesh4.visible = false;\n\t\t// this.mesh5.visible = false;\n\t\tthis.meshArr = [this.mesh, this.mesh2, this.mesh3, this.mesh4,this.mesh5];\n\n\t\tthis.mesh.material.needsUpdate = true;\n\t\tthis.mesh2.material.needsUpdate = true;\n\t\tthis.mesh3.material.needsUpdate = true;\n\t\tthis.mesh4.material.needsUpdate = true;\n\t\tthis.mesh5.material.needsUpdate = true;\n\t\tthis.scene.add(this.mesh);\n\t\t// this.mesh2.rotation.y -= Math.PI;\n\t\tthis.scene.add(this.mesh2);\n\t\t// this.mesh3.rotation.z -= Math.PI;\n\t\tthis.scene.add(this.mesh3);\n\t\tthis.scene.add(this.mesh4);\n\t\tthis.mesh5.rotation.y -= Math.PI;\n\t\tthis.scene.add(this.mesh5);\n\n\n\t\tthis.material.glossinessMap = this.texture \n\n\t\tthis.applyInstancingToMeshExtended(this.mesh,1)\n\t\tthis.applyInstancingToMeshExtended(this.mesh2,2)\n\t\tthis.applyInstancingToMeshExtended(this.mesh3,3)\n\n\t\tthis.applyInstancingToMeshExtended(this.mesh4,4)\n\t\tthis.applyInstancingToMeshExtended(this.mesh5,3)\n\n\n\t}\n\n\n\tinitInstanceAttributesExtended = (max, minus,minus2,minus3, array, attArray, meshName, n) => {\n\t\t//create geometry attributes\n\t\t// NURBS curve\n\n\t\t\t\tconst nurbsControlPoints = [];\n\t\t\t\tconst nurbsKnots = [];\n\t\t\t\tconst nurbsDegree = 3;\n\n\t\t\t\tfor ( let i = 0; i <= nurbsDegree; i ++ ) {\n\n\t\t\t\t\tnurbsKnots.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, j = 10; i < j; i ++ ) {\n\n\t\t\t\t\tnurbsControlPoints.push(\n\t\t\t\t\t\tnew THREE.Vector4(\n\t\t\t\t\t\t\tMath.random() * max - minus,\n\t\t\t\t\t\t\tMath.random() * max - minus2,\n\t\t\t\t\t\t\tMath.random() * max - minus3,\n\t\t\t\t\t\t\t-100 // weight of control point: higher means stronger attraction\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tconst knot = ( i + 1 ) / ( j - nurbsDegree );\n\t\t\t\t\tnurbsKnots.push( THREE.MathUtils.clamp( knot, 0, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t\tconst nurbsCurve = new NURBSCurve( nurbsDegree, nurbsKnots, nurbsControlPoints );\n\n\t\t// var knot = new Curves.TorusKnot( 60 );\n\t\tvar positions = nurbsCurve.getSpacedPoints( INSTANCES );\n\n\t\tvar offsets = new Float32Array( INSTANCES * 3 ); // xyz\n\t\tvar scales = new Float32Array( INSTANCES * 1 ); // s\n\t\t// var colors = new Float32Array( INSTANCES * 3 ); \n\n\t\tvar myThis = this;\n\n\t\tvar dummy2 = [];\n\t\tvar dummy4 = [];\n\t\tvar dummy3 = [];\n\n\t\tfor ( var i = 0, l = INSTANCES; i < l; i ++ ) {\n\n\t\t\tvar object = new THREE.Mesh(new THREE.SphereBufferGeometry(12)) \n\t\t\tvar object2;\n\n\t\t\tobject.userData.index = i //keep for mapping to attribute\n\n\t\t\tvar index = 3 * i;\n\n\t\t\t// per-instance position offset\n\t\t\toffsets[ index ] = positions[ i ].x;\n\t\t\toffsets[ index + 1 ] = positions[ i ].y;\n\t\t\toffsets[ index + 2 ] = positions[ i ].z;\n\n\t\t\tobject.position.x = positions[ i ].x;\n\t\t\tobject.position.y = positions[ i ].y;\n\t\t\tobject.position.z = positions[ i ].z;\n\n\t\t\t// per-instance scale variation\n\t\t\tscales[ i ] = 2 + 0.5 * Math.sin( frequency * Math.PI * i / INSTANCES );\n\t\t\tobject.scale.x = scales[ i ];\n\t\t\tobject.scale.y = scales[ i ];\n\t\t\tobject.scale.z = scales[ i ];\n\n\t\t\tthis.intersectsScene.add( object );\n\t\t\t\n\t\t\tobject.cursor = \"pointer\";\n\n\t\t\tobject.on('click',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEventClicked(ev, myThis.meshArr[n-1], n-1);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\n\t\t\t// console.log(\"mouseover\",this.mesh);\n\t\t\tobject.on('mouseover',\n\t\t\t\tfunction(ev) {\n\t\t\t\t myThis.goEvent(ev, myThis.meshArr[n-1], false, n-1);\n\t\t}\n\n\t\t\t);\n\t\t\tobject.on('mouseout', function(ev) {\n\t\t\t\t myThis.goEvent2(ev, myThis.meshArr[n-1], false);\n\t\t});\n\n\t\t\tif (n==2){\n\t\t\t\t//cybersecurity4uterus\n\t\t\t\tobject2 = object.clone();\n\n\t\t\t\tobject2.position.x *= -1.0;\n\t\t\t\tobject2.position.z *= -1.0;\n\n\t\t\t\t// this.intersectsScene.children[INSTANCES*5+i] = object2 ;\n\t\t\t\tdummy2.push(object2);\n\t\t\t\tobject2.cursor = \"pointer\";\n\n\t\t\t\tobject2.on('click',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEventClicked(ev, myThis.meshArr[5],5);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\tobject2.on('mouseover',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEvent(ev, myThis.meshArr[5],true, 5);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\tobject2.on('mouseout', function(ev) {\n\t\t\t\t\t myThis.goEvent2(ev, myThis.meshArr[5],true);\n\t\t\t});\n\t\t\t\t// object2.updateMatrixWorld()\n\t\t\t}\n\t\t\tif (n==4){\n\t\t\t\t//nahee run daddy\n\t\t\t\tobject2 = object.clone();\n\n\t\t\t\tobject2.position.x *= -1.0;\n\t\t\t\tobject2.position.z *= -1.0;\n\t\t\t\tdummy4.push(object2);\n\t\t\t\t// this.intersectsScene.add( object2 );\n\t\t\t\t// this.intersectsScene.children[INSTANCES*6+i] = object2 ;\n\t\t\t\tobject2.cursor = \"pointer\";\n\t\t\t\tobject2.on('click',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEventClicked(ev, myThis.meshArr[6],6);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\tobject2.on('mouseover',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEvent(ev, myThis.meshArr[6],true, 6);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\tobject2.on('mouseout', function(ev) {\n\t\t\t\t\t myThis.goEvent2(ev, myThis.meshArr[6],true);\n\t\t\t});\n\t\t\t\t// object2.updateMatrixWorld()\n\t\t\t}\n\t\t\tif (n==3){\n\t\t\t\t//What is daddy residency?\n\t\t\t\tobject2 = object.clone();\n\n\t\t\t\tobject2.position.x *= -1.0;\n\t\t\t\tobject2.position.z *= -1.0;\n\t\t\t\tdummy3.push(object2);\n\t\t\t\t// this.intersectsScene.add( object2 );\n\t\t\t\t// this.intersectsScene.children[INSTANCES*4+i] = object2;\n\n\t\t\t\tobject2.cursor = \"pointer\";\n\t\t\t\tobject2.on('click',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEventClicked(ev, myThis.meshArr[4],4);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\tobject2.on('mouseover',\n\t\t\t\t\tfunction(ev) {\n\t\t\t\t\t myThis.goEvent(ev, myThis.meshArr[4], false, 4);\n\t\t\t}\n\n\t\t\t\t);\n\t\t\t\tobject2.on('mouseout', function(ev) {\n\t\t\t\t\t myThis.goEvent2(ev, myThis.meshArr[4], false);\n\t\t\t});\n\t\t\t\t// object2.updateMatrixWorld()\n\t\t\t}\n\t\t\t\n\n\t\t\tobject.updateMatrixWorld()\n\t\t\t\t\n\t\t}\n\t\t// console.log(\"dummy3\",dummy3.length);\n\t\tif (dummy3.length > 0){\n\t\t\tvar theLimit = 128;\n\t\t\tif(isMobile){\n\t\t\t\ttheLimit = 64;\n\t\t\t}\n\t\t\tfor (var i = 0; i <theLimit; i++) {\n\t\t\t\tthis.intersectsScene.add(dummy3[i]);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif (dummy2.length > 0){\n\t\t\tvar theLimit = 128;\n\t\t\tif(isMobile){\n\t\t\t\ttheLimit = 64;\n\t\t\t}\n\t\t\tfor (var i = 0; i <theLimit; i++) {\n\t\t\t\tthis.intersectsScene.add(dummy2[i]);\n\t\t\t}\n\t\t}\n\t\tif (dummy4.length > 0){\n\t\t\tvar theLimit = 128;\n\t\t\tif(isMobile){\n\t\t\t\ttheLimit = 64;\n\t\t\t}\n\t\t\tfor (var i = 0; i <theLimit; i++) {\n\t\t\t\tthis.intersectsScene.add(dummy4[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// this.intersectsScene.add( new THREE.Mesh(new THREE.SphereBufferGeometry(100), this.material) );\n\n\t\tthis.intersectsScene.updateMatrixWorld(true);\n\n\t\t// this.instanceColorAttribute2 = new THREE.InstancedBufferAttribute( colors, 3 )\n\t\tthis.instanceOffsetAttribute2 = new THREE.InstancedBufferAttribute( offsets, 3 )\n\t\tthis.instanceScaleAttribute2 = new THREE.InstancedBufferAttribute( scales, 1 )\n\n\t\t// this.colorAttArr[n-1] = this.instanceColorAttribute2;\n\t\tthis.offsetAttArr[n-1] = this.instanceOffsetAttribute2;\n\t\tthis.scaleAttArr[n-1] = this.instanceScaleAttribute2;\n\t}\n\n\n\tapplyInstancingToMeshExtended = (mesh,n) => {\n\t\tvar indecis = new Float32Array( INSTANCES ); \n\n\t\tfor ( var i = 0, l = INSTANCES; i < l; i ++ ) {\n\t\t\tindecis[i] = i / INSTANCES\n\t\t}\n\n\t\tmesh.geometry.addAttribute('aIndex', new THREE.InstancedBufferAttribute( indecis, 1 ) )\n\n\t\tvar uTime = { value: 0, type: 'float', stage: 'vertex' }\n\t\tmesh.material.userData.uTime = uTime\n\t\t// console.log(\"mesh.material.shaderUniforms.uTime\",mesh.material.shaderUniforms );\n\t\t//we expose it as a primitive\n\t\tObject.defineProperty(mesh.material, 'time', {\n\t\t\tget:()=>uTime.value,\n\t\t\tset:v=>uTime.value = v\n\t\t})\n\t\tvar uScale = { value: 1.5, type: 'float', stage: 'vertex' }\n\t\tmesh.material.userData.uScale = uScale\n\t\t// console.log(\"mesh.material.shaderUniforms.uTime\",mesh.material.shaderUniforms );\n\t\t//we expose it as a primitive\n\t\tObject.defineProperty(mesh.material, 'scale', {\n\t\t\tget:()=>uScale.value,\n\t\t\tset:v=>uScale.value = v\n\t\t})\n\n\t\tvar uSelected = { value: false, type: 'boolean' }\n\t\tObject.defineProperty(mesh, 'selected', {\n\t\t\tget:()=>uSelected.value,\n\t\t\tset:v=>uSelected.value = v\n\t\t})\n\n\t\tdecorateMaterialWithSimpleInstancing2(mesh.material)\n\t\tmesh.customDepthMaterial = decorateMaterialWithSimpleInstancing(\n\t\t\tnew THREE.MeshDepthMaterial({ depthPacking: THREE.RGBADepthPacking })\n\t\t)\n\t\tmesh.material.needsUpdate = true;\n\n\t\tmesh.geometry = new THREE.InstancedBufferGeometry().copy(mesh.geometry)\n\n\t\tmesh.geometry.instanceCount = INSTANCES\n\n\t\t// mesh.geometry.setAttribute( 'instanceColor', this.colorAttArr[n-1] );\n\t\tmesh.geometry.setAttribute( 'instanceOffset', this.offsetAttArr[n-1]);\n\t\tmesh.geometry.setAttribute( 'instanceScale', this.scaleAttArr[n-1] );\n\t\t\n\t\t// for shadow\n\t\tmesh.customDepthMaterial.userData = { uTime: mesh.material.userData.uTime }//wire this by reference, whenever prop updates material uniform this material updates too by referencing the same uniform\n\t\t// mesh.customDepthMaterial.userData = { uScale: mesh.material.userData.uScale }\n\t}\n\n  onDocumentMouseMove = ( event ) => {\n\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    var myThis2 = this;\n        myThis2.mouseX = ( event.clientX - windowHalfX ) / 2;\n        myThis2.mouseY = ( event.clientY - windowHalfY ) / 2;\n\n    myThis2.mouse.x = event.clientX;\n    myThis2.mouse.y = event.clientY;\n\n      }\n\n    focusEvent = (param, tf,n) => {\n\n    \t// this.interval = setInterval(() => myThis.updateFocus(), 2000);\n\t\tif (param){\n\n\t\t\tif (tf){\n\t\t\t\tparam.material.emissive.r = 1.9;\n\t\t\t\tparam.material.emissive.g = 1.8;\n\t\t\t\tparam.material.emissive.b = 1.9;\n\t\t\t\tparam.material.emissiveIntensity = 1;\n\t\t\t}else{\n\t\t\t\tparam.material.emissive.r = .9;\n\t\t\t\tparam.material.emissive.g = .8;\n\t\t\t\tparam.material.emissive.b = .9;\n\t\t\t\tparam.material.emissiveIntensity = .4;\n\t\t\t}\n\t\t\t// param.visible = false;\n\t\t}\n\t\tthis.setState({\n\t       projectTitle: projectTitles2[n],\n\t       // uterusImg: \"/textures/mat/\"+projectTitles[n] +\"_mat.png\"\n\t    });\n\t}\n focusEvent2 = (param, tf) => {\n \tif (param){\n \t\tif (tf){\n\t\t\t\tparam.material.emissive.r = 1;\n\t\t\t\tparam.material.emissive.g = 1;\n\t\t\t\tparam.material.emissive.b = 1;\n\t\t\t\tparam.material.emissiveIntensity = 1;\n\t\t\t}else{\n\t\t\t\tparam.material.emissive.r = .0;\n\t\t\t\tparam.material.emissive.g = .0;\n\t\t\t\tparam.material.emissive.b = .0;\n\t\t\t\tparam.material.emissiveIntensity = 1;\n\t\t\t}\n\t\t\t// param.visible = true;\n\t\t}\n\t\t\n\t}\n\n  goEvent = (ev, param, tf, n) => {\n\t\t// console.log(\"oh clicked\",param);\n\t\t// if (param){\n\n\t\t\tif (tf){\n\t\t\t\tparam.material.emissive.r = 1.9;\n\t\t\t\tparam.material.emissive.g = 1.8;\n\t\t\t\tparam.material.emissive.b = 1.9;\n\t\t\t\tparam.material.emissiveIntensity = 1;\n\t\t\t}else{\n\t\t\t\tparam.material.emissive.r = .9;\n\t\t\t\tparam.material.emissive.g = .8;\n\t\t\t\tparam.material.emissive.b = .9;\n\t\t\t\tparam.material.emissiveIntensity = .6;\n\t\t\t}\n\t\t// }\n\t\tvar mHeight = window.innerHeight;\n\t\tthis.setState({\n\t      modalTop: this.mouse.y - (mHeight*0.5) + \"px\",\n\t      modalLeft:this.mouse.x - (mHeight*0.5) + \"px\",\n\t      petitDisplay:\"none\",\n\t       projectTitle: projectTitles2[n]\n\t    });\n\t\t\n\t}\n goEvent2 = (ev, param, tf, n) => {\n \tif (param){\n \t\tif (tf){\n\t\t\t\tparam.material.emissive.r = 1;\n\t\t\t\tparam.material.emissive.g = 1;\n\t\t\t\tparam.material.emissive.b = 1;\n\t\t\t\tparam.material.emissiveIntensity = 1;\n\t\t\t}else{\n\t\t\t\tparam.material.emissive.r = .0;\n\t\t\t\tparam.material.emissive.g = .0;\n\t\t\t\tparam.material.emissive.b = .0;\n\t\t\t\tparam.material.emissiveIntensity = 1;\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tthis.setState({\n\t      petitDisplay:\"none\"\n\t    });\n\t\t\n\t}\n\tgoEventClicked = (ev, param, n) => {\n\n\t\t\tthis.setState({\n\t      // display: \"display\",\n\t      // uterusImg: \"/textures/mat/\"+projectTitles[n] +\"_mat.png\",\n\t      // projectTitle: projectTitles2[n],\n\t      // projectLink: projectLinks[n],\n\t      // marqueeTxt:projectTitles2[n],\n\t      // marqueePointer:\"inherit\"\n\t    });\n\t\t// }\n\t\t\n\t}\n\ttitleClicked = (param) => {\n\n\t\tvar n = focusCounter % 7;\n\t\t\tthis.setState({\n\t      display: \"display\",\n\t      uterusImg: \"/textures/mat/\"+projectTitles[n] +\"_mat.png\",\n\t      projectTitle: projectTitles2[n],\n\t      projectLink: projectLinks[n],\n\t      marqueeTxt:projectTitles2[n],\n\t      marqueePointer:\"inherit\"\n\t    });\n\t\t// }\n\t\t\n\t}\n\n  startAnimationLoop = () => {\n  \t\n \t\n\t\tthis.targetX = this.mouseX * .001;\n\t\tthis.targetY = this.mouseY * .001;\n\n\t\tvar delta = this.clock.getDelta() * 0.01 * 1;\n\t\tif ( this.mesh ) {\n\n\t\t\tif (isBrowser) {\n\t\t\t\tthis.mesh.rotation.y += 0.05 * ( this.targetX - this.mesh.rotation.y );\n\t\t\t\tthis.mesh.rotation.x += 0.05 * ( this.targetY - this.mesh.rotation.x );\n\t\t\t}\n\n\t\t\tthis.mesh.material.time += delta;\n\t\t\tif(this.mesh.selected){\n\t\t\t\t// console.log(\"it's selected\");\n\t\t\t\t// if(this.mesh.material.scale<5){\n\t\t\t\t// \tthis.mesh.material.scale += delta*300;\n\t\t\t\t// }\n\t\t\t\t// this.mesh.material.userData.uScale.value = this.mesh.material.scale;\n\t\t\t}else{\n\t\t\t\t// console.log(\"it's not selected\");\n\t\t\t\t// if(this.mesh.material.scale>2.5){\n\t\t\t\t// \tthis.mesh.material.scale -= delta*300;\n\t\t\t\t// }\n\t\t\t\t// this.mesh.material.userData.uScale.value = this.mesh.material.scale;\n\t\t\t}\n\t\t\t\n\t\t\tthis.mesh.material.userData.uTime.value = this.mesh.material.time;\n\t\t\t\n\t\t\tthis.mesh.material.needsUpdate = true;\n\t\t\t// console.log(\"color\", this.mesh.material.scale);\n\t\t\t\n\n\t\t}\n\t\tif ( this.mesh4 ) {\n\n\t\t\tif (isBrowser) {\n\t\t\t\tthis.mesh4.rotation.y += 0.05 * ( this.targetX - this.mesh4.rotation.y );\n\t\t\t\tthis.mesh4.rotation.x += 0.05 * ( this.targetY - this.mesh4.rotation.x );\n\t\t\t}\n\n\t\t\tthis.mesh4.material.time += delta\n\t\t\tthis.mesh4.material.userData.uTime.value = this.mesh4.material.time;\n\t\t\tthis.mesh4.material.needsUpdate = true;\n\t\t\t\n\n\t\t}\n\t\tif ( this.mesh5 ) {\n\n\t\t\tif (isBrowser) {\n\t\t\t\tthis.mesh5.rotation.y += 0.05 * ( this.targetX - this.mesh5.rotation.y );\n\t\t\t\tthis.mesh5.rotation.x += 0.05 * ( this.targetY - this.mesh5.rotation.x );\n\t\t\t}\n\n\t\t\tthis.mesh5.rotation.y = this.mesh3.rotation.y + Math.PI;\n\t\t\tthis.mesh5.material.time += delta\n\t\t\tthis.mesh5.material.userData.uTime.value = this.mesh5.material.time;\n\t\t\tthis.mesh5.material.needsUpdate = true;\n\t\t\t\n\n\t\t}\n\t\tif ( this.mesh2 ) {\n\n\t\t\tif (isBrowser){\n\t\t\t\tthis.mesh2.rotation.y += 0.05 * ( this.targetX - this.mesh2.rotation.y );\n\t\t\t\tthis.mesh2.rotation.x += 0.05 * ( this.targetY - this.mesh2.rotation.x );\n\t\t\t}\n\n\t\t\tthis.mesh2.material.time += delta\n\t\t\tthis.mesh2.material.userData.uTime.value = this.mesh2.material.time;\n\t\t\tthis.mesh2.material.needsUpdate = true;\n\t\t\t\n\n\t\t}\n\t\tif ( this.mesh3 ) {\n\n\t\t\tif (isBrowser){\n\t\t\t\tthis.mesh3.rotation.y += 0.05 * ( this.targetX - this.mesh3.rotation.y );\n\t\t\t\tthis.mesh3.rotation.x += 0.05 * ( this.targetY - this.mesh3.rotation.x );\n\t\t\t}\n\n\t\t\tthis.mesh3.material.time += delta\n\t\t\tthis.mesh3.material.userData.uTime.value = this.mesh3.material.time;\n\t\t\tthis.mesh3.material.needsUpdate = true;\n\t\t\t\n\n\t\t}\n\n\t\tif ( this.meshGLTF ) {\n\n\t\t\tif (isBrowser){\n\t\t\t\tthis.meshGLTF.rotation.y += 0.05 * ( this.targetX - this.meshGLTF.rotation.y );\n\t\t\t\tthis.meshGLTF.rotation.x += 0.05 * ( this.targetY - this.meshGLTF.rotation.x );\n\t\t\t}\n\n\t\t\tthis.meshGLTF.material.time += delta;\n\n\t\t}\n\t\tif ( this.meshGLTF2 ) {\n\n\t\t\tif (isBrowser){\n\t\t\t\tthis.meshGLTF2.rotation.y += 0.05 * ( this.targetX - this.meshGLTF2.rotation.y );\n\t\t\t\tthis.meshGLTF2.rotation.x += 0.05 * ( this.targetY - this.meshGLTF2.rotation.x );\n\t\t\t}\n\n\t\t\tthis.meshGLTF2.material.time += delta;\n\n\t\t}\n\t    this.renderer.render(this.scene, this.camera);\n\t    this.stats.end();\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n  };\n\n  removeModal = () => {\n  \t// console.log(\"jey\");\n  \tthis.setState({\n\t      display: \"none\",\n\t      marqueeTxt:\"ϕth Daddy Masters Class ⟿ Register\",\n\t      marqueePointer:\"pointer\"\n\t    });\n  }\n  test = () =>{\n  \t// console.log(\"hey for test\");\n  \tthis.setState({\n\t      tableDisplay: \"none\"\n\t    });\n  \ttableShow = !tableShow;\n  }\n\n  changeRowColor=()=>{\n  \tif (this.state.rowColor == \"white\"){\n  \t\tthis.setState({\n\t      rowColor:\"transparent\",\n\t      rowTextColor:\"white\"\n\t    });\n  \t}else{\n  \t\tthis.setState({\n\t      rowColor:\"white\",\n\t      rowTextColor:\"black\",\n\t      rowColor2:\"transparent\",\n\t      rowTextColor2:\"white\",\n\t      rowColor3:\"transparent\",\n\t      rowTextColor3:\"white\",\n\t      rowColor4:\"transparent\",\n\t      rowTextColor4:\"white\"\n\t    });\n  \t}\n  }\n  changeRowColor2=()=>{\n  \tif (this.state.rowColor2 == \"white\"){\n  \t\tthis.setState({\n\t      rowColor2:\"transparent\",\n\t      rowTextColor2:\"white\"\n\t    });\n  \t}else{\n  \t\tthis.setState({\n\t      rowColor2:\"white\",\n\t      rowTextColor2:\"black\",\n\t      rowColor:\"transparent\",\n\t      rowTextColor:\"white\",\n\t      rowColor3:\"transparent\",\n\t      rowTextColor3:\"white\",\n\t      rowColor4:\"transparent\",\n\t      rowTextColor4:\"white\"\n\t    });\n  \t}\n  }\n  changeRowColor3=()=>{\n  \tif (this.state.rowColor3 == \"white\"){\n  \t\tthis.setState({\n\t      rowColor3:\"transparent\",\n\t      rowTextColor3:\"white\"\n\t    });\n  \t}else{\n  \t\tthis.setState({\n\t      rowColor3:\"white\",\n\t      rowTextColor3:\"black\",\n\t      rowColor2:\"transparent\",\n\t      rowTextColor2:\"white\",\n\t      rowColor:\"transparent\",\n\t      rowTextColor:\"white\",\n\t      rowColor4:\"transparent\",\n\t      rowTextColor4:\"white\"\n\t    });\n  \t}\n  }\n  changeRowColor4=()=>{\n  \tif (this.state.rowColor4 == \"white\"){\n  \t\tthis.setState({\n\t      rowColor4:\"transparent\",\n\t      rowTextColor4:\"white\"\n\t    });\n  \t}else{\n  \t\tthis.setState({\n\t      rowColor4:\"white\",\n\t      rowTextColor4:\"black\",\n\t      rowColor2:\"transparent\",\n\t      rowTextColor2:\"white\",\n\t      rowColor3:\"transparent\",\n\t      rowTextColor3:\"white\",\n\t      rowColor:\"transparent\",\n\t      rowTextColor:\"white\"\n\t    });\n  \t}\n  }\n  handleZIndex = () =>{\n  \t// console.log(\"hey for test\");\n  \tif (this.state.formZIndex < 35000){\n  \t\tthis.setState({\n\t      formZIndex: 40000\n\t    });\n  \t}else{\n  \t\tthis.setState({\n\t      formZIndex: 30000\n\t    });\n  \t}\n  \t\n  }\n\nshowTable = () => {\n  \t// console.log(\"jey\");\n  \tif (firstTime){\n  \t\tthis.interval = setInterval(() => this.updateArrow(), 300);\n  \t\tfirstTime = false;\n  \t}\n  \tif (tableShow){\n  \t\tthis.setState({\n\t      tableDisplay: \"none\",\n\t      petitDisplay:\"none\"\n\t    });\n\t    tableShow = !tableShow;\n\t    clearInterval(this.interval);\n\t    firstTime = true;\n\t    arrowSymbols = \"\";\n  \t}else{\n  \t\tif (this.state.marqueeTxt == \"ϕth Daddy Masters Class ⟿ Register\"){\n  \t\t\tthis.setState({\n\t\t      tableDisplay: \"inherit\",\n\t      petitDisplay:\"none\"\n\t\t    });\n\t\t    tableShow = !tableShow;\n  \t\t}\n  \t}\n  }\n  showCredit = () => {\n  \t// console.log(\"jey\");\n  \tif (creditShow){\n  \t\tthis.setState({\n\t      creditDisplay: \"none\"\n\t    });\n\t    creditShow = !creditShow;\n  \t}else{\n  \t\tthis.setState({\n\t\t    creditDisplay: \"inherit\"\n\t    });\n\t    creditShow = !creditShow;\n  \t}\n  }\n\n  toggleMarqueeHover= () =>{\n  \t// console.log(\"marqueeHovered\",marqueeHovered);\n  \tif (marqueeHovered){\n  \t\tthis.setState({\n\t      marqueeHover: \"\"\n\t    });\n\t    marqueeHovered = !marqueeHovered;\n  \t}else{\n  \t\tif (this.state.display != \"display\"){\n  \t\t\tthis.setState({\n\t\t      marqueeHover: \"marqueeHover\"\n\t\t    });\n\t\t    marqueeHovered = !marqueeHovered;\n  \t\t}\n  \t}\n  \t\n  }\n\n  toggleMarqueeHover2= () =>{\n  \t// console.log(\"marqueeHovered\",marqueeHovered);\n  \tif (marqueeHovered2){\n  \t\tthis.setState({\n\t      marqueeHover2: \"\"\n\t    });\n\t    marqueeHovered2 = !marqueeHovered2;\n  \t}else{\n  \t\tif (this.state.display != \"display\"){\n  \t\t\tthis.setState({\n\t\t      marqueeHover2: \"marqueeHover\"\n\t\t    });\n\t\t    marqueeHovered2 = !marqueeHovered2;\n  \t\t}\n  \t}\n  \t\n  }\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    if (isMobile){\n    \tINSTANCES = 64;\n    \tgltfScale = 1000;\n    }else if(isBrowser){\n    \tINSTANCES = 128;\n    \tgltfScale = 1500;\n    }\n\n    if(isBrowser){\n    \tthis.renderer.setSize(width, height);\n    \tthis.camera.updateProjectionMatrix();\n    \tthis.setState({\n\t      wWidth:window.innerWidth,\n\t      wHeight:window.innerHeight\n\t    });\n    }\n\n    this.camera.aspect = width / height;\n\n    // ϕth Daddy Masters Class ⟿ Register\n  };\n\n  render() {\n\n    return <div style={{overflowY:\"hidden\",width:this.state.wWidth,height:this.state.wHeight}}>\n    <div style={{overflowY:\"hidden\",position:\"fixed\",top:\"0px\",left:\"0px\",width:this.state.wWidth,height:this.state.wHeight}} ref={ref => (this.el = ref)}>\n    </div>\n    \n    <div className={`modal ${this.state.display}`} style={{position:\"fixed\",top:\"0px\",left:\"0px\",width:this.state.wWidth,height:this.state.wHeight, background:\"rgba(49,0,119,0.3)\"}}>\n    <div onClick={this.removeModal} className=\"removeBtn\">⇜<br/>⇜</div>\n    <div className=\"thumbnail\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n\n    <div className=\"excerpt1\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n            <div className=\"thumbnail3\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n\n    <div className=\"thumbnail5\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n\n      <div className=\"thumbnail6\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n    \n    <div className=\"thumbnail8\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n    <div className=\"thumbnail2\" style={{backgroundImage:\"url(\"+this.state.uterusImg+\")\"}}></div>\n\n        <div className=\"frame\">\n\n</div>\n         \n\n    </div>\n    <div className={`marquee ${this.state.marqueeHover}`} onClick={this.showTable} onMouseEnter={this.toggleMarqueeHover} onMouseLeave={this.toggleMarqueeHover} id=\"marquee\" style={{cursor:this.state.marqueePointer}}>\n\t  <div>\n\t    <span>{this.state.marqueeTxt}</span>\n\t    <span>{this.state.marqueeTxt}</span>\n\t    <span style={{display:this.state.marqueeDisplay}}>ϕth Daddy Masters Class ⟿ Register</span>\n\t  </div>\n\t</div>\n\t<div className={`marquee2 ${this.state.marqueeHover2}`} onClick={this.showTable} onMouseEnter={this.toggleMarqueeHover2} onMouseLeave={this.toggleMarqueeHover2} style={{cursor:this.state.marqueePointer}}>\n\t  <div>\n\t    <span>{this.state.marqueeTxt}</span>\n\t    <span>{this.state.marqueeTxt}</span>\n\t    <span style={{display:this.state.marqueeDisplay}}>ϕth Daddy Masters Class ⟿ Register</span>\n\t  </div>\n\t</div>\n\t<div className=\"creditDiv\" style={{display:this.state.creditDisplay}}>\n\t<div className=\"creditDivInner\">\n\t<br />\n\t\tpresented by<br />\n\t\t<a href=\"https://www.instagram.com/eobchae2020/\" target=\"_blank\">업체eobchae</a><br />\n\t\t<br />\n\t\t⟡<br />\n\t\t<br />\n\t\tcreated by<br />\n\t\t<a href=\"https://www.instagram.com/nahee.app/\" target=\"_blank\">nahee.app</a><br />\n\t\t<br />\n\t\t⟡<br />\n\t\t<br />\n\t\tsupported by<br />\n\t\t<img src=\"support.png\" className=\"support\" /><br />\n\t\t</div>\n\t</div>\n\t<div className=\"credit\" onClick={this.showCredit}>\n\t⟡<br />\n\t{this.state.secondRnd}<br />\n\t{this.state.thirdRnd}<br />\n\t{this.state.fourthRnd}<br />\n\t⟡<br />\n\t</div>\n\n\n\t<div className=\"table_container\" style={{display:this.state.tableDisplay, top:this.state.tableTop, height:this.state.tableHeight}}>\n\t<div onClick={this.showTable} className=\"removeBtn2\">⇜<br/>⇜</div>\n\t<div id=\"table_div\">\n            <table id=\"table\">\n            <tr>\n            <th>section</th>\n            <th>title</th>\n            <th>credit</th>\n            <th>instructor</th>\n            <th>status</th>\n          </tr>\n          <tr>\n            <td>000.001</td>\n            <td>Daddy Master Class (ϕth edition)</td>\n            <td>3</td>\n            <td>nahee.app</td>\n            <td>closed</td>\n          </tr>\n          <tr>\n            <td>000.002</td>\n            <td>Daddy Master Class (ϕth edition)</td>\n            <td>3</td>\n            <td>nahee.app</td>\n            <td>closed</td>\n          </tr>\n          <tr onClick={this.changeRowColor} style={{background:this.state.rowColor, color:this.state.rowTextColor}}>\n            <td>000.003</td>\n            <td>Daddy Master Class (ϕth edition)</td>\n            <td>3</td>\n            <td>nahee.app</td>\n            <td>waitlist</td>\n          </tr>\n          <tr onClick={this.changeRowColor2} style={{display:this.state.showTableRow,background:this.state.rowColor2, color:this.state.rowTextColor2}}>\n            <td>000.004</td>\n            <td>Daddy Master Class (ϕth edition)</td>\n            <td>3</td>\n            <td>nahee.app</td>\n            <td>open</td>\n          </tr>\n          <tr onClick={this.changeRowColor3} style={{display:this.state.showTableRow,background:this.state.rowColor3, color:this.state.rowTextColor3}}>\n            <td>000.005</td>\n            <td>Daddy Master Class (ϕth edition)</td>\n            <td>3</td>\n            <td>nahee.app</td>\n            <td>open</td>\n          </tr>\n          <tr onClick={this.changeRowColor4} style={{display:this.state.showTableRow,background:this.state.rowColor4, color:this.state.rowTextColor4}}>\n            <td>000.006</td>\n            <td>Daddy Master Class (ϕth edition)</td>\n            <td>3</td>\n            <td>nahee.app</td>\n            <td>open</td>\n          </tr>\n        </table>\n\t</div>\n\t\t<ScreenWidth mom={this.test.bind(this)} son={this.handleZIndex.bind(this)}>\n        {(width) => <div className=\"forForm\" style={{zIndex:this.state.formZIndex}}>{width}</div>}\n      </ScreenWidth>\n      <div className=\"classDescription\" style={{top:this.state.seTop}}>\n      <br/>\n      \n      <p className=\"reveal\"><span className=\"descSpan\">대디 마스터 클래스는 2026년에 인공수정으로 태어날 ‘가지’의 공동 양육자</span></p>\n\n <p className=\"reveal\"><span className=\"descSpan\">‘대디’의 기초 소양을 학습시키기 위해 개설되었습니다.</span></p>\n\n <p className=\"reveal\"><span className=\"descSpan\">이번 대디 마스터 클래스를 관통하는 핵심 질문은 다음과 같습니다:</span></p>\n\n <p className=\"reveal\"><span className=\"descSpan\">Φ년 뒤 가지는 모든 걸 집어삼키는 비대한 스테이트와 통제받지 않는 대신 보호받지도 못하는 반투명한 커뮤니티\n\n중 과연 어디에서 살고 있을까요?</span></p>\n\n<p className=\"reveal\"><span className=\"descSpan\">수강 기간 2020.12.24 ~ 12.31</span></p> \n \n      </div>\n      <div className=\"arrowForButton\">\n      <svg class=\"hidden\" viewBox=\"0 0 200 1000\" width=\"200\" height=\"1000\">\n\t\t\t<defs>\n\t\t\t\t<filter id=\"distortionFilter\">\n\t\t\t\t\t<feTurbulence type=\"fractalNoise\" baseFrequency=\"0.03 0.01\" numOctaves=\"2\" seed=\"2\" stitchTiles=\"stitch\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" result=\"noise\"/>\n\t\t\t\t\t<feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"26\" data-min-scale=\"0\" data-max-scale=\"100\" xChannelSelector=\"R\" yChannelSelector=\"B\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" filterUnits=\"userSpaceOnUse\"/>\n\t\t\t\t</filter>\n\n\t\t\t</defs>\n\t\t</svg>\n      <svg class=\"svgtext svgtext--2\" data-filter-type=\"distortion\" width=\"120%\" viewBox=\"0 0 200 1000\">\n\t\t\t<path id=\"text-curve2\" d=\"M52.12,14.77C159.65,195.17,185.07,417,149.35,624c-5.21,30.18-11.65,60.16-20.31,89.53-8.52,28.91-19.14,57.13-29.76,85.33l-68.55,182\" fill=\"none\"/>\n\t\t\t<text filter=\"url(#distortionFilter)\" fill=\"rgba(255,255,255,.4)\">\n\t\t\t\t<textPath href=\"#text-curve2\" y=\"36\" style={{overflow:\"visible\"}}>\n\t\t\t\t{this.state.mymyText}\n\t\t\t\t</textPath>\n\t\t\t</text>\n\t\t</svg>\n      </div>\n\n\t</div>\n    <div className={`logoContainer ${this.state.logoOpacity}`} style={{background:\"black\",overflowY:\"hidden\",position:\"fixed\",top:\"0px\",left:\"0px\",width:this.state.wWidth,height:this.state.wHeight}}>\n\n    <div className=\"logoContainerInner\">\n    <img src=\"drd_logo_s.png\" className={`drdLogo ${this.state.drdLogo}`} />\n    </div>\n    \n      </div>\n\n\n    </div>\n  }\n}\n\n\nexport default PlacentaNo;\n","import React from 'react'\nimport { ScreenWidth } from './ScreenWidth';\n\nclass SubText extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\n\t    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n\t    this.state = {\n\t      email:'',\n\t      password:''\n\t    };\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\thandleEmailChange(e){\n\t    this.setState({email:e.target.value})\n\t}\n\thandlePasswordChange(e){\n\t    this.setState({password:e.target.value})\n\t}\n\n\tsignIn(){\n\t    this.props.onLogin(this.state.email, this.state.password);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ScreenWidth>\n        {(width) => <div className=\"forForm\">{width}</div>}\n      </ScreenWidth>\n\t\t);\n\t}\n\n    \n}\n\nexport default SubText","import React, { Component , Fragment} from 'react';\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from 'react-router-dom';\nimport './App.scss';\n\nimport createClass from 'create-react-class';\n\nimport Placenta from './components/Placenta';\nimport PlacentaAll from './components/PlacentaAll';\nimport PlacentaNo from './components/PlacentaNo';\nimport SubText from './components/SubText';\n\nvar App = createClass({\n    render: function () {\n    return (\n      <Router>\n        <div id=\"app\" className=\"App\" style={{margin:\"0px auto\"}}>\n          <Fragment>\n              <Switch>\n              <Route exact path=\"/\" exact render={() => (\n\n                  <PlacentaNo></PlacentaNo>\n                )} />\n               <Route exact path=\"/test\" exact render={() => (\n\n                  <SubText></SubText>\n                )} />\n            \n\n                </Switch>\n              </Fragment>\n            </div>\n          </Router>\n\n        )}\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}